<!--#include virtual="header.txt"--><link rel="stylesheet" type="text/css" href="openapi.css" /> <body>
  <h1>Slurm REST API</h1>
    <div class="app-desc">API to access and control Slurm</div>
    <div class="app-desc">More information: <a href="https://www.schedmd.com/">https://www.schedmd.com/</a></div>
    <div class="app-desc">Contact Info: <a href="sales@schedmd.com">sales@schedmd.com</a></div>
    <div class="app-desc">Version: Slurm-24.05.0&amp;openapi/slurmdbd&amp;openapi/slurmctld</div>
    <div class="app-desc">BasePath:</div>
    <div class="license-info">Apache 2.0</div>
    <div class="license-url">https://www.apache.org/licenses/LICENSE-2.0.html</div>
  <h2>Access</h2>
    <ol>
      <li>APIKey KeyParamName:X-SLURM-USER-NAME KeyInQuery:false KeyInHeader:true</li>
      <li>APIKey KeyParamName:X-SLURM-USER-TOKEN KeyInQuery:false KeyInHeader:true</li>
      <li>HTTP Basic Authentication</li>
    </ol>

  <h2><a name="__Methods">Methods</a></h2>
  [ Jump to <a href="#__Models">Models</a> ]

  <h3>Table of Contents </h3>
  <div class="method-summary"></div>
  <h4><a href="#Slurm">Slurm</a></h4>
  <ul>
  <li><a href="#slurmV0041DeleteJob"><code><span class="http-method">delete</span> /slurm/v0.0.41/job/{job_id}</code></a></li>
  <li><a href="#slurmV0041DeleteJobs"><code><span class="http-method">delete</span> /slurm/v0.0.41/jobs/</code></a></li>
  <li><a href="#slurmV0041DeleteNode"><code><span class="http-method">delete</span> /slurm/v0.0.41/node/{node_name}</code></a></li>
  <li><a href="#slurmV0041GetDiag"><code><span class="http-method">get</span> /slurm/v0.0.41/diag/</code></a></li>
  <li><a href="#slurmV0041GetJob"><code><span class="http-method">get</span> /slurm/v0.0.41/job/{job_id}</code></a></li>
  <li><a href="#slurmV0041GetJobs"><code><span class="http-method">get</span> /slurm/v0.0.41/jobs/</code></a></li>
  <li><a href="#slurmV0041GetJobsState"><code><span class="http-method">get</span> /slurm/v0.0.41/jobs/state/</code></a></li>
  <li><a href="#slurmV0041GetLicenses"><code><span class="http-method">get</span> /slurm/v0.0.41/licenses/</code></a></li>
  <li><a href="#slurmV0041GetNode"><code><span class="http-method">get</span> /slurm/v0.0.41/node/{node_name}</code></a></li>
  <li><a href="#slurmV0041GetNodes"><code><span class="http-method">get</span> /slurm/v0.0.41/nodes/</code></a></li>
  <li><a href="#slurmV0041GetPartition"><code><span class="http-method">get</span> /slurm/v0.0.41/partition/{partition_name}</code></a></li>
  <li><a href="#slurmV0041GetPartitions"><code><span class="http-method">get</span> /slurm/v0.0.41/partitions/</code></a></li>
  <li><a href="#slurmV0041GetPing"><code><span class="http-method">get</span> /slurm/v0.0.41/ping/</code></a></li>
  <li><a href="#slurmV0041GetReconfigure"><code><span class="http-method">get</span> /slurm/v0.0.41/reconfigure/</code></a></li>
  <li><a href="#slurmV0041GetReservation"><code><span class="http-method">get</span> /slurm/v0.0.41/reservation/{reservation_name}</code></a></li>
  <li><a href="#slurmV0041GetReservations"><code><span class="http-method">get</span> /slurm/v0.0.41/reservations/</code></a></li>
  <li><a href="#slurmV0041GetShares"><code><span class="http-method">get</span> /slurm/v0.0.41/shares</code></a></li>
  <li><a href="#slurmV0041PostJob"><code><span class="http-method">post</span> /slurm/v0.0.41/job/{job_id}</code></a></li>
  <li><a href="#slurmV0041PostJobAllocate"><code><span class="http-method">post</span> /slurm/v0.0.41/job/allocate</code></a></li>
  <li><a href="#slurmV0041PostJobSubmit"><code><span class="http-method">post</span> /slurm/v0.0.41/job/submit</code></a></li>
  <li><a href="#slurmV0041PostNode"><code><span class="http-method">post</span> /slurm/v0.0.41/node/{node_name}</code></a></li>
  </ul>

  <h1><a name="Slurm">Slurm</a></h1>
  <div class="method"><a name="slurmV0041DeleteJob">
    </a><div class="method-path"><a name="slurmV0041DeleteJob">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurm/v0.0.41/job/{job_id}</code></pre></div>
    <div class="method-summary">cancel or signal job (<span class="nickname">slurmV0041DeleteJob</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">job_id (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> — JobId default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">signal (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Signal to send to Job default: null </div><div class="param">flags (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Signalling flags default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.41_openapi_resp">v0.0.41_openapi_resp</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/jsonrequest</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: text/yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: text/yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job signal result
        <a href="#v0.0.41_openapi_resp">v0.0.41_openapi_resp</a>
    <h4 class="field-label">default</h4>
    job signal result
        <a href="#v0.0.41_openapi_resp">v0.0.41_openapi_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0041DeleteJobs">
    </a><div class="method-path"><a name="slurmV0041DeleteJobs">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurm/v0.0.41/jobs/</code></pre></div>
    <div class="method-summary">send signal to list of jobs (<span class="nickname">slurmV0041DeleteJobs</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Filter jobs to a specific account default: null </div><div class="param">flags (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Filter jobs according to flags default: null </div><div class="param">job_name (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Filter jobs to a specific name default: null </div><div class="param">jobs (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — List of jobs to signal default: null </div><div class="param">partition (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Filter jobs to a specific partition default: null </div><div class="param">qos (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Filter jobs to a specific QOS default: null </div><div class="param">reservation (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Filter jobs to a specific reservation default: null </div><div class="param">signal (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Signal to send to jobs default: null </div><div class="param">job_state (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Filter jobs to a specific state default: null </div><div class="param">user_id (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Filter jobs to a specific numeric user id default: null </div><div class="param">user_name (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Filter jobs to a specific user name default: null </div><div class="param">wckey (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Filter jobs to a specific wckey default: null </div><div class="param">nodes (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Filter jobs to a set of nodes default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.41_openapi_kill_jobs_resp">v0.0.41_openapi_kill_jobs_resp</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ],
  "status" : [ {
    "federation" : {
      "sibling" : "sibling"
    },
    "job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "error" : {
      "code" : 0,
      "string" : "string",
      "message" : "message"
    },
    "step_id" : "step_id"
  }, {
    "federation" : {
      "sibling" : "sibling"
    },
    "job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "error" : {
      "code" : 0,
      "string" : "string",
      "message" : "message"
    },
    "step_id" : "step_id"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/jsonrequest</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ],
  "status" : [ {
    "federation" : {
      "sibling" : "sibling"
    },
    "job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "error" : {
      "code" : 0,
      "string" : "string",
      "message" : "message"
    },
    "step_id" : "step_id"
  }, {
    "federation" : {
      "sibling" : "sibling"
    },
    "job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "error" : {
      "code" : 0,
      "string" : "string",
      "message" : "message"
    },
    "step_id" : "step_id"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: text/yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: text/yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    description of jobs to signal
        <a href="#v0.0.41_openapi_kill_jobs_resp">v0.0.41_openapi_kill_jobs_resp</a>
    <h4 class="field-label">default</h4>
    description of jobs to signal
        <a href="#v0.0.41_openapi_kill_jobs_resp">v0.0.41_openapi_kill_jobs_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0041DeleteNode">
    </a><div class="method-path"><a name="slurmV0041DeleteNode">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurm/v0.0.41/node/{node_name}</code></pre></div>
    <div class="method-summary">delete node (<span class="nickname">slurmV0041DeleteNode</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">node_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> — Node name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.41_openapi_resp">v0.0.41_openapi_resp</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/jsonrequest</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: text/yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: text/yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    node delete request result
        <a href="#v0.0.41_openapi_resp">v0.0.41_openapi_resp</a>
    <h4 class="field-label">default</h4>
    node delete request result
        <a href="#v0.0.41_openapi_resp">v0.0.41_openapi_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0041GetDiag">
    </a><div class="method-path"><a name="slurmV0041GetDiag">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.41/diag/</code></pre></div>
    <div class="method-summary">get diagnostics (<span class="nickname">slurmV0041GetDiag</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.41_openapi_diag_resp">v0.0.41_openapi_diag_resp</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ],
  "statistics" : {
    "bf_cycle_max" : 6,
    "rpcs_by_message_type" : [ {
      "cycle_last" : 7,
      "average_time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "type_id" : 9,
      "queued" : 9,
      "count" : 0,
      "dropped" : 0,
      "message_type" : "message_type",
      "total_time" : 4,
      "cycle_max" : 5
    }, {
      "cycle_last" : 7,
      "average_time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "type_id" : 9,
      "queued" : 9,
      "count" : 0,
      "dropped" : 0,
      "message_type" : "message_type",
      "total_time" : 4,
      "cycle_max" : 5
    } ],
    "bf_backfilled_het_jobs" : 5,
    "bf_table_size" : 1,
    "schedule_cycle_depth" : 6,
    "bf_depth_sum" : 3,
    "job_states_ts" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "bf_queue_len" : 0,
    "jobs_started" : 9,
    "schedule_cycle_max" : 3,
    "server_thread_count" : 1,
    "bf_queue_len_sum" : 4,
    "bf_cycle_last" : 7,
    "bf_exit" : {
      "state_changed" : 3,
      "bf_max_time" : 7,
      "bf_max_job_start" : 4,
      "bf_node_space_size" : 3,
      "end_job_queue" : 0,
      "bf_max_job_test" : 8
    },
    "agent_thread_count" : 2,
    "jobs_completed" : 6,
    "bf_depth_mean" : 3,
    "bf_depth_try_sum" : 4,
    "schedule_cycle_mean" : 1,
    "bf_table_size_sum" : 4,
    "agent_queue_size" : 5,
    "jobs_failed" : 6,
    "bf_last_depth_try" : 5,
    "req_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "bf_cycle_counter" : 6,
    "schedule_queue_length" : 6,
    "bf_queue_len_mean" : 6,
    "schedule_exit" : {
      "max_sched_time" : 9,
      "licenses" : 9,
      "default_queue_depth" : 1,
      "max_job_start" : 4,
      "max_rpc_cnt" : 5,
      "end_job_queue" : 7
    },
    "jobs_canceled" : 3,
    "schedule_cycle_sum" : 4,
    "jobs_submitted" : 8,
    "schedule_cycle_mean_depth" : 1,
    "schedule_cycle_per_minute" : 1,
    "req_time_start" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "jobs_running" : 2,
    "bf_last_backfilled_jobs" : 6,
    "bf_last_depth" : 7,
    "bf_backfilled_jobs" : 6,
    "rpcs_by_user" : [ {
      "average_time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "user_id" : 8,
      "count" : 4,
      "total_time" : 3,
      "user" : "user"
    }, {
      "average_time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "user_id" : 8,
      "count" : 4,
      "total_time" : 3,
      "user" : "user"
    } ],
    "bf_cycle_mean" : 3,
    "pending_rpcs_by_hostlist" : [ {
      "type_id" : 1,
      "count" : [ "count", "count" ],
      "message_type" : "message_type"
    }, {
      "type_id" : 1,
      "count" : [ "count", "count" ],
      "message_type" : "message_type"
    } ],
    "dbd_agent_queue_size" : 7,
    "bf_table_size_mean" : 7,
    "jobs_pending" : 1,
    "agent_count" : 5,
    "bf_cycle_sum" : 0,
    "parts_packed" : 0,
    "bf_active" : true,
    "bf_depth_mean_try" : 7,
    "gettimeofday_latency" : 9,
    "pending_rpcs" : [ {
      "type_id" : 0,
      "count" : 2,
      "message_type" : "message_type"
    }, {
      "type_id" : 0,
      "count" : 2,
      "message_type" : "message_type"
    } ],
    "schedule_cycle_total" : 7,
    "bf_when_last_cycle" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "schedule_cycle_last" : 2
  }
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/jsonrequest</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ],
  "statistics" : {
    "bf_cycle_max" : 6,
    "rpcs_by_message_type" : [ {
      "cycle_last" : 7,
      "average_time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "type_id" : 9,
      "queued" : 9,
      "count" : 0,
      "dropped" : 0,
      "message_type" : "message_type",
      "total_time" : 4,
      "cycle_max" : 5
    }, {
      "cycle_last" : 7,
      "average_time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "type_id" : 9,
      "queued" : 9,
      "count" : 0,
      "dropped" : 0,
      "message_type" : "message_type",
      "total_time" : 4,
      "cycle_max" : 5
    } ],
    "bf_backfilled_het_jobs" : 5,
    "bf_table_size" : 1,
    "schedule_cycle_depth" : 6,
    "bf_depth_sum" : 3,
    "job_states_ts" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "bf_queue_len" : 0,
    "jobs_started" : 9,
    "schedule_cycle_max" : 3,
    "server_thread_count" : 1,
    "bf_queue_len_sum" : 4,
    "bf_cycle_last" : 7,
    "bf_exit" : {
      "state_changed" : 3,
      "bf_max_time" : 7,
      "bf_max_job_start" : 4,
      "bf_node_space_size" : 3,
      "end_job_queue" : 0,
      "bf_max_job_test" : 8
    },
    "agent_thread_count" : 2,
    "jobs_completed" : 6,
    "bf_depth_mean" : 3,
    "bf_depth_try_sum" : 4,
    "schedule_cycle_mean" : 1,
    "bf_table_size_sum" : 4,
    "agent_queue_size" : 5,
    "jobs_failed" : 6,
    "bf_last_depth_try" : 5,
    "req_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "bf_cycle_counter" : 6,
    "schedule_queue_length" : 6,
    "bf_queue_len_mean" : 6,
    "schedule_exit" : {
      "max_sched_time" : 9,
      "licenses" : 9,
      "default_queue_depth" : 1,
      "max_job_start" : 4,
      "max_rpc_cnt" : 5,
      "end_job_queue" : 7
    },
    "jobs_canceled" : 3,
    "schedule_cycle_sum" : 4,
    "jobs_submitted" : 8,
    "schedule_cycle_mean_depth" : 1,
    "schedule_cycle_per_minute" : 1,
    "req_time_start" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "jobs_running" : 2,
    "bf_last_backfilled_jobs" : 6,
    "bf_last_depth" : 7,
    "bf_backfilled_jobs" : 6,
    "rpcs_by_user" : [ {
      "average_time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "user_id" : 8,
      "count" : 4,
      "total_time" : 3,
      "user" : "user"
    }, {
      "average_time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "user_id" : 8,
      "count" : 4,
      "total_time" : 3,
      "user" : "user"
    } ],
    "bf_cycle_mean" : 3,
    "pending_rpcs_by_hostlist" : [ {
      "type_id" : 1,
      "count" : [ "count", "count" ],
      "message_type" : "message_type"
    }, {
      "type_id" : 1,
      "count" : [ "count", "count" ],
      "message_type" : "message_type"
    } ],
    "dbd_agent_queue_size" : 7,
    "bf_table_size_mean" : 7,
    "jobs_pending" : 1,
    "agent_count" : 5,
    "bf_cycle_sum" : 0,
    "parts_packed" : 0,
    "bf_active" : true,
    "bf_depth_mean_try" : 7,
    "gettimeofday_latency" : 9,
    "pending_rpcs" : [ {
      "type_id" : 0,
      "count" : 2,
      "message_type" : "message_type"
    }, {
      "type_id" : 0,
      "count" : 2,
      "message_type" : "message_type"
    } ],
    "schedule_cycle_total" : 7,
    "bf_when_last_cycle" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "schedule_cycle_last" : 2
  }
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: text/yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: text/yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    diagnostic results
        <a href="#v0.0.41_openapi_diag_resp">v0.0.41_openapi_diag_resp</a>
    <h4 class="field-label">default</h4>
    diagnostic results
        <a href="#v0.0.41_openapi_diag_resp">v0.0.41_openapi_diag_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0041GetJob">
    </a><div class="method-path"><a name="slurmV0041GetJob">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.41/job/{job_id}</code></pre></div>
    <div class="method-summary">get job info (<span class="nickname">slurmV0041GetJob</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">job_id (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> — JobId default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Filter jobs since update timestamp default: null </div><div class="param">flags (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Query flags default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.41_openapi_job_info_resp">v0.0.41_openapi_job_info_resp</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "last_backfill" : {
    "number" : 9,
    "set" : true,
    "infinite" : true
  },
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "jobs" : [ {
    "container" : "container",
    "cluster" : "cluster",
    "time_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "memory_per_tres" : "memory_per_tres",
    "scheduled_nodes" : "scheduled_nodes",
    "minimum_switches" : 5,
    "qos" : "qos",
    "resize_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "eligible_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "exclusive" : [ "true", "true" ],
    "cpus_per_tres" : "cpus_per_tres",
    "preemptable_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_tres" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "accrue_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "dependency" : "dependency",
    "group_name" : "group_name",
    "profile" : [ "NOT_SET", "NOT_SET" ],
    "priority" : {
      "number" : 9,
      "set" : true,
      "infinite" : true
    },
    "tres_per_job" : "tres_per_job",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "maximum_switch_wait_time" : 8,
    "core_spec" : 6,
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 6,
    "selinux_context" : "selinux_context",
    "exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "federation_origin" : "federation_origin",
    "container_id" : "container_id",
    "shared" : [ "none", "none" ],
    "tasks_per_board" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "user_name" : "user_name",
    "flags" : [ "KILL_INVALID_DEPENDENCY", "KILL_INVALID_DEPENDENCY" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "job_state" : [ "PENDING", "PENDING" ],
    "tasks_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cpu_frequency_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "node_count" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "power" : {
      "flags" : [ "", "" ]
    },
    "deadline" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "mail_type" : [ "BEGIN", "BEGIN" ],
    "memory_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "state_reason" : "state_reason",
    "het_job_offset" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "end_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_board" : 9,
    "nice" : 4,
    "last_sched_evaluation" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "het_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "prefer" : "prefer",
    "time_limit" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_cpus_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_host" : "batch_host",
    "max_cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "job_size_str" : [ "job_size_str", "job_size_str" ],
    "hold" : true,
    "cpu_frequency_maximum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "ALL", "ALL" ],
    "array_task_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_tmp_disk_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "cron" : "cron",
    "allocating_node" : "allocating_node",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "oversubscribe" : true,
    "wckey" : "wckey",
    "max_nodes" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "batch_flag" : true,
    "start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "name" : "name",
    "preempt_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "contiguous" : true,
    "job_resources" : {
      "nodes" : {
        "allocation" : [ {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        }, {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        } ],
        "count" : 3,
        "select_type" : [ "AVAILABLE", "AVAILABLE" ],
        "whole" : true,
        "list" : "list"
      },
      "threads_per_core" : {
        "number" : 1,
        "set" : true,
        "infinite" : true
      },
      "cpus" : 7,
      "select_type" : [ "CPU", "CPU" ]
    },
    "billable_tres" : {
      "number" : 5.962133916683182,
      "set" : true,
      "infinite" : true
    },
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_features" : "batch_features",
    "thread_spec" : 1,
    "cpu_frequency_governor" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "network" : "network",
    "restart_cnt" : 9,
    "resv_name" : "resv_name",
    "extra" : "extra",
    "delay_boot" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "reboot" : true,
    "cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "standard_output" : "standard_output",
    "pre_sus_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "suspend_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "association_id" : 0,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "mail_user" : "mail_user",
    "nodes" : "nodes",
    "group_id" : 7,
    "job_id" : 9,
    "comment" : "comment",
    "account" : "account"
  }, {
    "container" : "container",
    "cluster" : "cluster",
    "time_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "memory_per_tres" : "memory_per_tres",
    "scheduled_nodes" : "scheduled_nodes",
    "minimum_switches" : 5,
    "qos" : "qos",
    "resize_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "eligible_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "exclusive" : [ "true", "true" ],
    "cpus_per_tres" : "cpus_per_tres",
    "preemptable_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_tres" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "accrue_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "dependency" : "dependency",
    "group_name" : "group_name",
    "profile" : [ "NOT_SET", "NOT_SET" ],
    "priority" : {
      "number" : 9,
      "set" : true,
      "infinite" : true
    },
    "tres_per_job" : "tres_per_job",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "maximum_switch_wait_time" : 8,
    "core_spec" : 6,
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 6,
    "selinux_context" : "selinux_context",
    "exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "federation_origin" : "federation_origin",
    "container_id" : "container_id",
    "shared" : [ "none", "none" ],
    "tasks_per_board" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "user_name" : "user_name",
    "flags" : [ "KILL_INVALID_DEPENDENCY", "KILL_INVALID_DEPENDENCY" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "job_state" : [ "PENDING", "PENDING" ],
    "tasks_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cpu_frequency_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "node_count" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "power" : {
      "flags" : [ "", "" ]
    },
    "deadline" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "mail_type" : [ "BEGIN", "BEGIN" ],
    "memory_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "state_reason" : "state_reason",
    "het_job_offset" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "end_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_board" : 9,
    "nice" : 4,
    "last_sched_evaluation" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "het_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "prefer" : "prefer",
    "time_limit" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_cpus_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_host" : "batch_host",
    "max_cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "job_size_str" : [ "job_size_str", "job_size_str" ],
    "hold" : true,
    "cpu_frequency_maximum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "ALL", "ALL" ],
    "array_task_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_tmp_disk_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "cron" : "cron",
    "allocating_node" : "allocating_node",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "oversubscribe" : true,
    "wckey" : "wckey",
    "max_nodes" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "batch_flag" : true,
    "start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "name" : "name",
    "preempt_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "contiguous" : true,
    "job_resources" : {
      "nodes" : {
        "allocation" : [ {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        }, {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        } ],
        "count" : 3,
        "select_type" : [ "AVAILABLE", "AVAILABLE" ],
        "whole" : true,
        "list" : "list"
      },
      "threads_per_core" : {
        "number" : 1,
        "set" : true,
        "infinite" : true
      },
      "cpus" : 7,
      "select_type" : [ "CPU", "CPU" ]
    },
    "billable_tres" : {
      "number" : 5.962133916683182,
      "set" : true,
      "infinite" : true
    },
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_features" : "batch_features",
    "thread_spec" : 1,
    "cpu_frequency_governor" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "network" : "network",
    "restart_cnt" : 9,
    "resv_name" : "resv_name",
    "extra" : "extra",
    "delay_boot" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "reboot" : true,
    "cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "standard_output" : "standard_output",
    "pre_sus_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "suspend_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "association_id" : 0,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "mail_user" : "mail_user",
    "nodes" : "nodes",
    "group_id" : 7,
    "job_id" : 9,
    "comment" : "comment",
    "account" : "account"
  } ],
  "last_update" : {
    "number" : 6,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/jsonrequest</div>
    <pre class="example"><code>{
  "last_backfill" : {
    "number" : 9,
    "set" : true,
    "infinite" : true
  },
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "jobs" : [ {
    "container" : "container",
    "cluster" : "cluster",
    "time_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "memory_per_tres" : "memory_per_tres",
    "scheduled_nodes" : "scheduled_nodes",
    "minimum_switches" : 5,
    "qos" : "qos",
    "resize_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "eligible_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "exclusive" : [ "true", "true" ],
    "cpus_per_tres" : "cpus_per_tres",
    "preemptable_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_tres" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "accrue_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "dependency" : "dependency",
    "group_name" : "group_name",
    "profile" : [ "NOT_SET", "NOT_SET" ],
    "priority" : {
      "number" : 9,
      "set" : true,
      "infinite" : true
    },
    "tres_per_job" : "tres_per_job",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "maximum_switch_wait_time" : 8,
    "core_spec" : 6,
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 6,
    "selinux_context" : "selinux_context",
    "exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "federation_origin" : "federation_origin",
    "container_id" : "container_id",
    "shared" : [ "none", "none" ],
    "tasks_per_board" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "user_name" : "user_name",
    "flags" : [ "KILL_INVALID_DEPENDENCY", "KILL_INVALID_DEPENDENCY" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "job_state" : [ "PENDING", "PENDING" ],
    "tasks_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cpu_frequency_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "node_count" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "power" : {
      "flags" : [ "", "" ]
    },
    "deadline" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "mail_type" : [ "BEGIN", "BEGIN" ],
    "memory_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "state_reason" : "state_reason",
    "het_job_offset" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "end_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_board" : 9,
    "nice" : 4,
    "last_sched_evaluation" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "het_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "prefer" : "prefer",
    "time_limit" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_cpus_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_host" : "batch_host",
    "max_cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "job_size_str" : [ "job_size_str", "job_size_str" ],
    "hold" : true,
    "cpu_frequency_maximum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "ALL", "ALL" ],
    "array_task_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_tmp_disk_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "cron" : "cron",
    "allocating_node" : "allocating_node",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "oversubscribe" : true,
    "wckey" : "wckey",
    "max_nodes" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "batch_flag" : true,
    "start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "name" : "name",
    "preempt_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "contiguous" : true,
    "job_resources" : {
      "nodes" : {
        "allocation" : [ {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        }, {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        } ],
        "count" : 3,
        "select_type" : [ "AVAILABLE", "AVAILABLE" ],
        "whole" : true,
        "list" : "list"
      },
      "threads_per_core" : {
        "number" : 1,
        "set" : true,
        "infinite" : true
      },
      "cpus" : 7,
      "select_type" : [ "CPU", "CPU" ]
    },
    "billable_tres" : {
      "number" : 5.962133916683182,
      "set" : true,
      "infinite" : true
    },
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_features" : "batch_features",
    "thread_spec" : 1,
    "cpu_frequency_governor" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "network" : "network",
    "restart_cnt" : 9,
    "resv_name" : "resv_name",
    "extra" : "extra",
    "delay_boot" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "reboot" : true,
    "cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "standard_output" : "standard_output",
    "pre_sus_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "suspend_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "association_id" : 0,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "mail_user" : "mail_user",
    "nodes" : "nodes",
    "group_id" : 7,
    "job_id" : 9,
    "comment" : "comment",
    "account" : "account"
  }, {
    "container" : "container",
    "cluster" : "cluster",
    "time_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "memory_per_tres" : "memory_per_tres",
    "scheduled_nodes" : "scheduled_nodes",
    "minimum_switches" : 5,
    "qos" : "qos",
    "resize_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "eligible_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "exclusive" : [ "true", "true" ],
    "cpus_per_tres" : "cpus_per_tres",
    "preemptable_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_tres" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "accrue_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "dependency" : "dependency",
    "group_name" : "group_name",
    "profile" : [ "NOT_SET", "NOT_SET" ],
    "priority" : {
      "number" : 9,
      "set" : true,
      "infinite" : true
    },
    "tres_per_job" : "tres_per_job",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "maximum_switch_wait_time" : 8,
    "core_spec" : 6,
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 6,
    "selinux_context" : "selinux_context",
    "exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "federation_origin" : "federation_origin",
    "container_id" : "container_id",
    "shared" : [ "none", "none" ],
    "tasks_per_board" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "user_name" : "user_name",
    "flags" : [ "KILL_INVALID_DEPENDENCY", "KILL_INVALID_DEPENDENCY" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "job_state" : [ "PENDING", "PENDING" ],
    "tasks_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cpu_frequency_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "node_count" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "power" : {
      "flags" : [ "", "" ]
    },
    "deadline" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "mail_type" : [ "BEGIN", "BEGIN" ],
    "memory_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "state_reason" : "state_reason",
    "het_job_offset" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "end_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_board" : 9,
    "nice" : 4,
    "last_sched_evaluation" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "het_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "prefer" : "prefer",
    "time_limit" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_cpus_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_host" : "batch_host",
    "max_cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "job_size_str" : [ "job_size_str", "job_size_str" ],
    "hold" : true,
    "cpu_frequency_maximum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "ALL", "ALL" ],
    "array_task_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_tmp_disk_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "cron" : "cron",
    "allocating_node" : "allocating_node",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "oversubscribe" : true,
    "wckey" : "wckey",
    "max_nodes" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "batch_flag" : true,
    "start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "name" : "name",
    "preempt_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "contiguous" : true,
    "job_resources" : {
      "nodes" : {
        "allocation" : [ {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        }, {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        } ],
        "count" : 3,
        "select_type" : [ "AVAILABLE", "AVAILABLE" ],
        "whole" : true,
        "list" : "list"
      },
      "threads_per_core" : {
        "number" : 1,
        "set" : true,
        "infinite" : true
      },
      "cpus" : 7,
      "select_type" : [ "CPU", "CPU" ]
    },
    "billable_tres" : {
      "number" : 5.962133916683182,
      "set" : true,
      "infinite" : true
    },
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_features" : "batch_features",
    "thread_spec" : 1,
    "cpu_frequency_governor" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "network" : "network",
    "restart_cnt" : 9,
    "resv_name" : "resv_name",
    "extra" : "extra",
    "delay_boot" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "reboot" : true,
    "cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "standard_output" : "standard_output",
    "pre_sus_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "suspend_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "association_id" : 0,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "mail_user" : "mail_user",
    "nodes" : "nodes",
    "group_id" : 7,
    "job_id" : 9,
    "comment" : "comment",
    "account" : "account"
  } ],
  "last_update" : {
    "number" : 6,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: text/yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: text/yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job(s) information
        <a href="#v0.0.41_openapi_job_info_resp">v0.0.41_openapi_job_info_resp</a>
    <h4 class="field-label">default</h4>
    job(s) information
        <a href="#v0.0.41_openapi_job_info_resp">v0.0.41_openapi_job_info_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0041GetJobs">
    </a><div class="method-path"><a name="slurmV0041GetJobs">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.41/jobs/</code></pre></div>
    <div class="method-summary">get list of jobs (<span class="nickname">slurmV0041GetJobs</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Filter jobs since update timestamp default: null </div><div class="param">flags (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Query flags default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.41_openapi_job_info_resp">v0.0.41_openapi_job_info_resp</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "last_backfill" : {
    "number" : 9,
    "set" : true,
    "infinite" : true
  },
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "jobs" : [ {
    "container" : "container",
    "cluster" : "cluster",
    "time_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "memory_per_tres" : "memory_per_tres",
    "scheduled_nodes" : "scheduled_nodes",
    "minimum_switches" : 5,
    "qos" : "qos",
    "resize_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "eligible_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "exclusive" : [ "true", "true" ],
    "cpus_per_tres" : "cpus_per_tres",
    "preemptable_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_tres" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "accrue_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "dependency" : "dependency",
    "group_name" : "group_name",
    "profile" : [ "NOT_SET", "NOT_SET" ],
    "priority" : {
      "number" : 9,
      "set" : true,
      "infinite" : true
    },
    "tres_per_job" : "tres_per_job",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "maximum_switch_wait_time" : 8,
    "core_spec" : 6,
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 6,
    "selinux_context" : "selinux_context",
    "exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "federation_origin" : "federation_origin",
    "container_id" : "container_id",
    "shared" : [ "none", "none" ],
    "tasks_per_board" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "user_name" : "user_name",
    "flags" : [ "KILL_INVALID_DEPENDENCY", "KILL_INVALID_DEPENDENCY" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "job_state" : [ "PENDING", "PENDING" ],
    "tasks_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cpu_frequency_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "node_count" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "power" : {
      "flags" : [ "", "" ]
    },
    "deadline" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "mail_type" : [ "BEGIN", "BEGIN" ],
    "memory_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "state_reason" : "state_reason",
    "het_job_offset" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "end_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_board" : 9,
    "nice" : 4,
    "last_sched_evaluation" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "het_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "prefer" : "prefer",
    "time_limit" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_cpus_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_host" : "batch_host",
    "max_cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "job_size_str" : [ "job_size_str", "job_size_str" ],
    "hold" : true,
    "cpu_frequency_maximum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "ALL", "ALL" ],
    "array_task_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_tmp_disk_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "cron" : "cron",
    "allocating_node" : "allocating_node",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "oversubscribe" : true,
    "wckey" : "wckey",
    "max_nodes" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "batch_flag" : true,
    "start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "name" : "name",
    "preempt_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "contiguous" : true,
    "job_resources" : {
      "nodes" : {
        "allocation" : [ {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        }, {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        } ],
        "count" : 3,
        "select_type" : [ "AVAILABLE", "AVAILABLE" ],
        "whole" : true,
        "list" : "list"
      },
      "threads_per_core" : {
        "number" : 1,
        "set" : true,
        "infinite" : true
      },
      "cpus" : 7,
      "select_type" : [ "CPU", "CPU" ]
    },
    "billable_tres" : {
      "number" : 5.962133916683182,
      "set" : true,
      "infinite" : true
    },
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_features" : "batch_features",
    "thread_spec" : 1,
    "cpu_frequency_governor" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "network" : "network",
    "restart_cnt" : 9,
    "resv_name" : "resv_name",
    "extra" : "extra",
    "delay_boot" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "reboot" : true,
    "cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "standard_output" : "standard_output",
    "pre_sus_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "suspend_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "association_id" : 0,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "mail_user" : "mail_user",
    "nodes" : "nodes",
    "group_id" : 7,
    "job_id" : 9,
    "comment" : "comment",
    "account" : "account"
  }, {
    "container" : "container",
    "cluster" : "cluster",
    "time_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "memory_per_tres" : "memory_per_tres",
    "scheduled_nodes" : "scheduled_nodes",
    "minimum_switches" : 5,
    "qos" : "qos",
    "resize_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "eligible_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "exclusive" : [ "true", "true" ],
    "cpus_per_tres" : "cpus_per_tres",
    "preemptable_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_tres" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "accrue_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "dependency" : "dependency",
    "group_name" : "group_name",
    "profile" : [ "NOT_SET", "NOT_SET" ],
    "priority" : {
      "number" : 9,
      "set" : true,
      "infinite" : true
    },
    "tres_per_job" : "tres_per_job",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "maximum_switch_wait_time" : 8,
    "core_spec" : 6,
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 6,
    "selinux_context" : "selinux_context",
    "exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "federation_origin" : "federation_origin",
    "container_id" : "container_id",
    "shared" : [ "none", "none" ],
    "tasks_per_board" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "user_name" : "user_name",
    "flags" : [ "KILL_INVALID_DEPENDENCY", "KILL_INVALID_DEPENDENCY" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "job_state" : [ "PENDING", "PENDING" ],
    "tasks_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cpu_frequency_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "node_count" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "power" : {
      "flags" : [ "", "" ]
    },
    "deadline" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "mail_type" : [ "BEGIN", "BEGIN" ],
    "memory_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "state_reason" : "state_reason",
    "het_job_offset" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "end_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_board" : 9,
    "nice" : 4,
    "last_sched_evaluation" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "het_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "prefer" : "prefer",
    "time_limit" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_cpus_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_host" : "batch_host",
    "max_cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "job_size_str" : [ "job_size_str", "job_size_str" ],
    "hold" : true,
    "cpu_frequency_maximum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "ALL", "ALL" ],
    "array_task_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_tmp_disk_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "cron" : "cron",
    "allocating_node" : "allocating_node",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "oversubscribe" : true,
    "wckey" : "wckey",
    "max_nodes" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "batch_flag" : true,
    "start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "name" : "name",
    "preempt_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "contiguous" : true,
    "job_resources" : {
      "nodes" : {
        "allocation" : [ {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        }, {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        } ],
        "count" : 3,
        "select_type" : [ "AVAILABLE", "AVAILABLE" ],
        "whole" : true,
        "list" : "list"
      },
      "threads_per_core" : {
        "number" : 1,
        "set" : true,
        "infinite" : true
      },
      "cpus" : 7,
      "select_type" : [ "CPU", "CPU" ]
    },
    "billable_tres" : {
      "number" : 5.962133916683182,
      "set" : true,
      "infinite" : true
    },
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_features" : "batch_features",
    "thread_spec" : 1,
    "cpu_frequency_governor" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "network" : "network",
    "restart_cnt" : 9,
    "resv_name" : "resv_name",
    "extra" : "extra",
    "delay_boot" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "reboot" : true,
    "cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "standard_output" : "standard_output",
    "pre_sus_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "suspend_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "association_id" : 0,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "mail_user" : "mail_user",
    "nodes" : "nodes",
    "group_id" : 7,
    "job_id" : 9,
    "comment" : "comment",
    "account" : "account"
  } ],
  "last_update" : {
    "number" : 6,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/jsonrequest</div>
    <pre class="example"><code>{
  "last_backfill" : {
    "number" : 9,
    "set" : true,
    "infinite" : true
  },
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "jobs" : [ {
    "container" : "container",
    "cluster" : "cluster",
    "time_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "memory_per_tres" : "memory_per_tres",
    "scheduled_nodes" : "scheduled_nodes",
    "minimum_switches" : 5,
    "qos" : "qos",
    "resize_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "eligible_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "exclusive" : [ "true", "true" ],
    "cpus_per_tres" : "cpus_per_tres",
    "preemptable_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_tres" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "accrue_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "dependency" : "dependency",
    "group_name" : "group_name",
    "profile" : [ "NOT_SET", "NOT_SET" ],
    "priority" : {
      "number" : 9,
      "set" : true,
      "infinite" : true
    },
    "tres_per_job" : "tres_per_job",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "maximum_switch_wait_time" : 8,
    "core_spec" : 6,
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 6,
    "selinux_context" : "selinux_context",
    "exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "federation_origin" : "federation_origin",
    "container_id" : "container_id",
    "shared" : [ "none", "none" ],
    "tasks_per_board" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "user_name" : "user_name",
    "flags" : [ "KILL_INVALID_DEPENDENCY", "KILL_INVALID_DEPENDENCY" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "job_state" : [ "PENDING", "PENDING" ],
    "tasks_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cpu_frequency_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "node_count" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "power" : {
      "flags" : [ "", "" ]
    },
    "deadline" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "mail_type" : [ "BEGIN", "BEGIN" ],
    "memory_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "state_reason" : "state_reason",
    "het_job_offset" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "end_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_board" : 9,
    "nice" : 4,
    "last_sched_evaluation" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "het_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "prefer" : "prefer",
    "time_limit" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_cpus_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_host" : "batch_host",
    "max_cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "job_size_str" : [ "job_size_str", "job_size_str" ],
    "hold" : true,
    "cpu_frequency_maximum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "ALL", "ALL" ],
    "array_task_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_tmp_disk_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "cron" : "cron",
    "allocating_node" : "allocating_node",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "oversubscribe" : true,
    "wckey" : "wckey",
    "max_nodes" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "batch_flag" : true,
    "start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "name" : "name",
    "preempt_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "contiguous" : true,
    "job_resources" : {
      "nodes" : {
        "allocation" : [ {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        }, {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        } ],
        "count" : 3,
        "select_type" : [ "AVAILABLE", "AVAILABLE" ],
        "whole" : true,
        "list" : "list"
      },
      "threads_per_core" : {
        "number" : 1,
        "set" : true,
        "infinite" : true
      },
      "cpus" : 7,
      "select_type" : [ "CPU", "CPU" ]
    },
    "billable_tres" : {
      "number" : 5.962133916683182,
      "set" : true,
      "infinite" : true
    },
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_features" : "batch_features",
    "thread_spec" : 1,
    "cpu_frequency_governor" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "network" : "network",
    "restart_cnt" : 9,
    "resv_name" : "resv_name",
    "extra" : "extra",
    "delay_boot" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "reboot" : true,
    "cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "standard_output" : "standard_output",
    "pre_sus_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "suspend_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "association_id" : 0,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "mail_user" : "mail_user",
    "nodes" : "nodes",
    "group_id" : 7,
    "job_id" : 9,
    "comment" : "comment",
    "account" : "account"
  }, {
    "container" : "container",
    "cluster" : "cluster",
    "time_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "memory_per_tres" : "memory_per_tres",
    "scheduled_nodes" : "scheduled_nodes",
    "minimum_switches" : 5,
    "qos" : "qos",
    "resize_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "eligible_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "exclusive" : [ "true", "true" ],
    "cpus_per_tres" : "cpus_per_tres",
    "preemptable_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_tres" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "accrue_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "dependency" : "dependency",
    "group_name" : "group_name",
    "profile" : [ "NOT_SET", "NOT_SET" ],
    "priority" : {
      "number" : 9,
      "set" : true,
      "infinite" : true
    },
    "tres_per_job" : "tres_per_job",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "maximum_switch_wait_time" : 8,
    "core_spec" : 6,
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 6,
    "selinux_context" : "selinux_context",
    "exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "federation_origin" : "federation_origin",
    "container_id" : "container_id",
    "shared" : [ "none", "none" ],
    "tasks_per_board" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "user_name" : "user_name",
    "flags" : [ "KILL_INVALID_DEPENDENCY", "KILL_INVALID_DEPENDENCY" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "job_state" : [ "PENDING", "PENDING" ],
    "tasks_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cpu_frequency_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "node_count" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "power" : {
      "flags" : [ "", "" ]
    },
    "deadline" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "mail_type" : [ "BEGIN", "BEGIN" ],
    "memory_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "state_reason" : "state_reason",
    "het_job_offset" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "end_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_board" : 9,
    "nice" : 4,
    "last_sched_evaluation" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "het_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "prefer" : "prefer",
    "time_limit" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_cpus_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_host" : "batch_host",
    "max_cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "job_size_str" : [ "job_size_str", "job_size_str" ],
    "hold" : true,
    "cpu_frequency_maximum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "ALL", "ALL" ],
    "array_task_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_tmp_disk_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "cron" : "cron",
    "allocating_node" : "allocating_node",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "oversubscribe" : true,
    "wckey" : "wckey",
    "max_nodes" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "batch_flag" : true,
    "start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "name" : "name",
    "preempt_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "contiguous" : true,
    "job_resources" : {
      "nodes" : {
        "allocation" : [ {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        }, {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        } ],
        "count" : 3,
        "select_type" : [ "AVAILABLE", "AVAILABLE" ],
        "whole" : true,
        "list" : "list"
      },
      "threads_per_core" : {
        "number" : 1,
        "set" : true,
        "infinite" : true
      },
      "cpus" : 7,
      "select_type" : [ "CPU", "CPU" ]
    },
    "billable_tres" : {
      "number" : 5.962133916683182,
      "set" : true,
      "infinite" : true
    },
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_features" : "batch_features",
    "thread_spec" : 1,
    "cpu_frequency_governor" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "network" : "network",
    "restart_cnt" : 9,
    "resv_name" : "resv_name",
    "extra" : "extra",
    "delay_boot" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "reboot" : true,
    "cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "standard_output" : "standard_output",
    "pre_sus_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "suspend_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "association_id" : 0,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "mail_user" : "mail_user",
    "nodes" : "nodes",
    "group_id" : 7,
    "job_id" : 9,
    "comment" : "comment",
    "account" : "account"
  } ],
  "last_update" : {
    "number" : 6,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: text/yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: text/yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job(s) information
        <a href="#v0.0.41_openapi_job_info_resp">v0.0.41_openapi_job_info_resp</a>
    <h4 class="field-label">default</h4>
    job(s) information
        <a href="#v0.0.41_openapi_job_info_resp">v0.0.41_openapi_job_info_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0041GetJobsState">
    </a><div class="method-path"><a name="slurmV0041GetJobsState">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.41/jobs/state/</code></pre></div>
    <div class="method-summary">get list of job states (<span class="nickname">slurmV0041GetJobsState</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Filter jobs since update timestamp default: null </div><div class="param">flags (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Query flags default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.41_openapi_job_info_resp">v0.0.41_openapi_job_info_resp</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "last_backfill" : {
    "number" : 9,
    "set" : true,
    "infinite" : true
  },
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "jobs" : [ {
    "container" : "container",
    "cluster" : "cluster",
    "time_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "memory_per_tres" : "memory_per_tres",
    "scheduled_nodes" : "scheduled_nodes",
    "minimum_switches" : 5,
    "qos" : "qos",
    "resize_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "eligible_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "exclusive" : [ "true", "true" ],
    "cpus_per_tres" : "cpus_per_tres",
    "preemptable_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_tres" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "accrue_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "dependency" : "dependency",
    "group_name" : "group_name",
    "profile" : [ "NOT_SET", "NOT_SET" ],
    "priority" : {
      "number" : 9,
      "set" : true,
      "infinite" : true
    },
    "tres_per_job" : "tres_per_job",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "maximum_switch_wait_time" : 8,
    "core_spec" : 6,
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 6,
    "selinux_context" : "selinux_context",
    "exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "federation_origin" : "federation_origin",
    "container_id" : "container_id",
    "shared" : [ "none", "none" ],
    "tasks_per_board" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "user_name" : "user_name",
    "flags" : [ "KILL_INVALID_DEPENDENCY", "KILL_INVALID_DEPENDENCY" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "job_state" : [ "PENDING", "PENDING" ],
    "tasks_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cpu_frequency_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "node_count" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "power" : {
      "flags" : [ "", "" ]
    },
    "deadline" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "mail_type" : [ "BEGIN", "BEGIN" ],
    "memory_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "state_reason" : "state_reason",
    "het_job_offset" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "end_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_board" : 9,
    "nice" : 4,
    "last_sched_evaluation" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "het_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "prefer" : "prefer",
    "time_limit" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_cpus_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_host" : "batch_host",
    "max_cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "job_size_str" : [ "job_size_str", "job_size_str" ],
    "hold" : true,
    "cpu_frequency_maximum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "ALL", "ALL" ],
    "array_task_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_tmp_disk_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "cron" : "cron",
    "allocating_node" : "allocating_node",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "oversubscribe" : true,
    "wckey" : "wckey",
    "max_nodes" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "batch_flag" : true,
    "start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "name" : "name",
    "preempt_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "contiguous" : true,
    "job_resources" : {
      "nodes" : {
        "allocation" : [ {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        }, {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        } ],
        "count" : 3,
        "select_type" : [ "AVAILABLE", "AVAILABLE" ],
        "whole" : true,
        "list" : "list"
      },
      "threads_per_core" : {
        "number" : 1,
        "set" : true,
        "infinite" : true
      },
      "cpus" : 7,
      "select_type" : [ "CPU", "CPU" ]
    },
    "billable_tres" : {
      "number" : 5.962133916683182,
      "set" : true,
      "infinite" : true
    },
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_features" : "batch_features",
    "thread_spec" : 1,
    "cpu_frequency_governor" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "network" : "network",
    "restart_cnt" : 9,
    "resv_name" : "resv_name",
    "extra" : "extra",
    "delay_boot" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "reboot" : true,
    "cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "standard_output" : "standard_output",
    "pre_sus_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "suspend_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "association_id" : 0,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "mail_user" : "mail_user",
    "nodes" : "nodes",
    "group_id" : 7,
    "job_id" : 9,
    "comment" : "comment",
    "account" : "account"
  }, {
    "container" : "container",
    "cluster" : "cluster",
    "time_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "memory_per_tres" : "memory_per_tres",
    "scheduled_nodes" : "scheduled_nodes",
    "minimum_switches" : 5,
    "qos" : "qos",
    "resize_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "eligible_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "exclusive" : [ "true", "true" ],
    "cpus_per_tres" : "cpus_per_tres",
    "preemptable_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_tres" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "accrue_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "dependency" : "dependency",
    "group_name" : "group_name",
    "profile" : [ "NOT_SET", "NOT_SET" ],
    "priority" : {
      "number" : 9,
      "set" : true,
      "infinite" : true
    },
    "tres_per_job" : "tres_per_job",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "maximum_switch_wait_time" : 8,
    "core_spec" : 6,
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 6,
    "selinux_context" : "selinux_context",
    "exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "federation_origin" : "federation_origin",
    "container_id" : "container_id",
    "shared" : [ "none", "none" ],
    "tasks_per_board" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "user_name" : "user_name",
    "flags" : [ "KILL_INVALID_DEPENDENCY", "KILL_INVALID_DEPENDENCY" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "job_state" : [ "PENDING", "PENDING" ],
    "tasks_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cpu_frequency_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "node_count" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "power" : {
      "flags" : [ "", "" ]
    },
    "deadline" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "mail_type" : [ "BEGIN", "BEGIN" ],
    "memory_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "state_reason" : "state_reason",
    "het_job_offset" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "end_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_board" : 9,
    "nice" : 4,
    "last_sched_evaluation" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "het_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "prefer" : "prefer",
    "time_limit" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_cpus_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_host" : "batch_host",
    "max_cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "job_size_str" : [ "job_size_str", "job_size_str" ],
    "hold" : true,
    "cpu_frequency_maximum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "ALL", "ALL" ],
    "array_task_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_tmp_disk_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "cron" : "cron",
    "allocating_node" : "allocating_node",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "oversubscribe" : true,
    "wckey" : "wckey",
    "max_nodes" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "batch_flag" : true,
    "start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "name" : "name",
    "preempt_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "contiguous" : true,
    "job_resources" : {
      "nodes" : {
        "allocation" : [ {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        }, {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        } ],
        "count" : 3,
        "select_type" : [ "AVAILABLE", "AVAILABLE" ],
        "whole" : true,
        "list" : "list"
      },
      "threads_per_core" : {
        "number" : 1,
        "set" : true,
        "infinite" : true
      },
      "cpus" : 7,
      "select_type" : [ "CPU", "CPU" ]
    },
    "billable_tres" : {
      "number" : 5.962133916683182,
      "set" : true,
      "infinite" : true
    },
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_features" : "batch_features",
    "thread_spec" : 1,
    "cpu_frequency_governor" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "network" : "network",
    "restart_cnt" : 9,
    "resv_name" : "resv_name",
    "extra" : "extra",
    "delay_boot" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "reboot" : true,
    "cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "standard_output" : "standard_output",
    "pre_sus_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "suspend_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "association_id" : 0,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "mail_user" : "mail_user",
    "nodes" : "nodes",
    "group_id" : 7,
    "job_id" : 9,
    "comment" : "comment",
    "account" : "account"
  } ],
  "last_update" : {
    "number" : 6,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/jsonrequest</div>
    <pre class="example"><code>{
  "last_backfill" : {
    "number" : 9,
    "set" : true,
    "infinite" : true
  },
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "jobs" : [ {
    "container" : "container",
    "cluster" : "cluster",
    "time_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "memory_per_tres" : "memory_per_tres",
    "scheduled_nodes" : "scheduled_nodes",
    "minimum_switches" : 5,
    "qos" : "qos",
    "resize_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "eligible_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "exclusive" : [ "true", "true" ],
    "cpus_per_tres" : "cpus_per_tres",
    "preemptable_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_tres" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "accrue_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "dependency" : "dependency",
    "group_name" : "group_name",
    "profile" : [ "NOT_SET", "NOT_SET" ],
    "priority" : {
      "number" : 9,
      "set" : true,
      "infinite" : true
    },
    "tres_per_job" : "tres_per_job",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "maximum_switch_wait_time" : 8,
    "core_spec" : 6,
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 6,
    "selinux_context" : "selinux_context",
    "exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "federation_origin" : "federation_origin",
    "container_id" : "container_id",
    "shared" : [ "none", "none" ],
    "tasks_per_board" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "user_name" : "user_name",
    "flags" : [ "KILL_INVALID_DEPENDENCY", "KILL_INVALID_DEPENDENCY" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "job_state" : [ "PENDING", "PENDING" ],
    "tasks_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cpu_frequency_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "node_count" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "power" : {
      "flags" : [ "", "" ]
    },
    "deadline" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "mail_type" : [ "BEGIN", "BEGIN" ],
    "memory_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "state_reason" : "state_reason",
    "het_job_offset" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "end_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_board" : 9,
    "nice" : 4,
    "last_sched_evaluation" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "het_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "prefer" : "prefer",
    "time_limit" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_cpus_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_host" : "batch_host",
    "max_cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "job_size_str" : [ "job_size_str", "job_size_str" ],
    "hold" : true,
    "cpu_frequency_maximum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "ALL", "ALL" ],
    "array_task_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_tmp_disk_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "cron" : "cron",
    "allocating_node" : "allocating_node",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "oversubscribe" : true,
    "wckey" : "wckey",
    "max_nodes" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "batch_flag" : true,
    "start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "name" : "name",
    "preempt_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "contiguous" : true,
    "job_resources" : {
      "nodes" : {
        "allocation" : [ {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        }, {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        } ],
        "count" : 3,
        "select_type" : [ "AVAILABLE", "AVAILABLE" ],
        "whole" : true,
        "list" : "list"
      },
      "threads_per_core" : {
        "number" : 1,
        "set" : true,
        "infinite" : true
      },
      "cpus" : 7,
      "select_type" : [ "CPU", "CPU" ]
    },
    "billable_tres" : {
      "number" : 5.962133916683182,
      "set" : true,
      "infinite" : true
    },
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_features" : "batch_features",
    "thread_spec" : 1,
    "cpu_frequency_governor" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "network" : "network",
    "restart_cnt" : 9,
    "resv_name" : "resv_name",
    "extra" : "extra",
    "delay_boot" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "reboot" : true,
    "cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "standard_output" : "standard_output",
    "pre_sus_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "suspend_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "association_id" : 0,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "mail_user" : "mail_user",
    "nodes" : "nodes",
    "group_id" : 7,
    "job_id" : 9,
    "comment" : "comment",
    "account" : "account"
  }, {
    "container" : "container",
    "cluster" : "cluster",
    "time_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "memory_per_tres" : "memory_per_tres",
    "scheduled_nodes" : "scheduled_nodes",
    "minimum_switches" : 5,
    "qos" : "qos",
    "resize_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "eligible_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "exclusive" : [ "true", "true" ],
    "cpus_per_tres" : "cpus_per_tres",
    "preemptable_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_tres" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "accrue_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "dependency" : "dependency",
    "group_name" : "group_name",
    "profile" : [ "NOT_SET", "NOT_SET" ],
    "priority" : {
      "number" : 9,
      "set" : true,
      "infinite" : true
    },
    "tres_per_job" : "tres_per_job",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "maximum_switch_wait_time" : 8,
    "core_spec" : 6,
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 6,
    "selinux_context" : "selinux_context",
    "exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "federation_origin" : "federation_origin",
    "container_id" : "container_id",
    "shared" : [ "none", "none" ],
    "tasks_per_board" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "user_name" : "user_name",
    "flags" : [ "KILL_INVALID_DEPENDENCY", "KILL_INVALID_DEPENDENCY" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "job_state" : [ "PENDING", "PENDING" ],
    "tasks_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "cpu_frequency_minimum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "node_count" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "power" : {
      "flags" : [ "", "" ]
    },
    "deadline" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "mail_type" : [ "BEGIN", "BEGIN" ],
    "memory_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "state_reason" : "state_reason",
    "het_job_offset" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "end_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_board" : 9,
    "nice" : 4,
    "last_sched_evaluation" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "het_job_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "prefer" : "prefer",
    "time_limit" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_cpus_per_node" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_socket" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_host" : "batch_host",
    "max_cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "job_size_str" : [ "job_size_str", "job_size_str" ],
    "hold" : true,
    "cpu_frequency_maximum" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "ALL", "ALL" ],
    "array_task_id" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "minimum_tmp_disk_per_node" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "cron" : "cron",
    "allocating_node" : "allocating_node",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "oversubscribe" : true,
    "wckey" : "wckey",
    "max_nodes" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "batch_flag" : true,
    "start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "name" : "name",
    "preempt_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "contiguous" : true,
    "job_resources" : {
      "nodes" : {
        "allocation" : [ {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        }, {
          "memory" : {
            "used" : 1,
            "allocated" : 1
          },
          "cpus" : {
            "count" : 4,
            "used" : 7
          },
          "name" : "name",
          "index" : 2,
          "sockets" : [ {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          }, {
            "cores" : [ {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 6,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 1
          } ]
        } ],
        "count" : 3,
        "select_type" : [ "AVAILABLE", "AVAILABLE" ],
        "whole" : true,
        "list" : "list"
      },
      "threads_per_core" : {
        "number" : 1,
        "set" : true,
        "infinite" : true
      },
      "cpus" : 7,
      "select_type" : [ "CPU", "CPU" ]
    },
    "billable_tres" : {
      "number" : 5.962133916683182,
      "set" : true,
      "infinite" : true
    },
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : {
      "number" : 8,
      "set" : true,
      "infinite" : true
    },
    "batch_features" : "batch_features",
    "thread_spec" : 1,
    "cpu_frequency_governor" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "network" : "network",
    "restart_cnt" : 9,
    "resv_name" : "resv_name",
    "extra" : "extra",
    "delay_boot" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "reboot" : true,
    "cpus" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "standard_output" : "standard_output",
    "pre_sus_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "suspend_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "association_id" : 0,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "mail_user" : "mail_user",
    "nodes" : "nodes",
    "group_id" : 7,
    "job_id" : 9,
    "comment" : "comment",
    "account" : "account"
  } ],
  "last_update" : {
    "number" : 6,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: text/yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: text/yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job(s) state information
        <a href="#v0.0.41_openapi_job_info_resp">v0.0.41_openapi_job_info_resp</a>
    <h4 class="field-label">default</h4>
    job(s) state information
        <a href="#v0.0.41_openapi_job_info_resp">v0.0.41_openapi_job_info_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0041GetLicenses">
    </a><div class="method-path"><a name="slurmV0041GetLicenses">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.41/licenses/</code></pre></div>
    <div class="method-summary">get all Slurm tracked license info (<span class="nickname">slurmV0041GetLicenses</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.41_openapi_licenses_resp">v0.0.41_openapi_licenses_resp</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "licenses" : [ {
    "Used" : 6,
    "LastUpdate" : 7,
    "Total" : 0,
    "Remote" : true,
    "LastConsumed" : 5,
    "LastDeficit" : 2,
    "LicenseName" : "LicenseName",
    "Free" : 1,
    "Reserved" : 5
  }, {
    "Used" : 6,
    "LastUpdate" : 7,
    "Total" : 0,
    "Remote" : true,
    "LastConsumed" : 5,
    "LastDeficit" : 2,
    "LicenseName" : "LicenseName",
    "Free" : 1,
    "Reserved" : 5
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "last_update" : {
    "number" : 9,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/jsonrequest</div>
    <pre class="example"><code>{
  "licenses" : [ {
    "Used" : 6,
    "LastUpdate" : 7,
    "Total" : 0,
    "Remote" : true,
    "LastConsumed" : 5,
    "LastDeficit" : 2,
    "LicenseName" : "LicenseName",
    "Free" : 1,
    "Reserved" : 5
  }, {
    "Used" : 6,
    "LastUpdate" : 7,
    "Total" : 0,
    "Remote" : true,
    "LastConsumed" : 5,
    "LastDeficit" : 2,
    "LicenseName" : "LicenseName",
    "Free" : 1,
    "Reserved" : 5
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "last_update" : {
    "number" : 9,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: text/yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: text/yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    results of get all licenses
        <a href="#v0.0.41_openapi_licenses_resp">v0.0.41_openapi_licenses_resp</a>
    <h4 class="field-label">default</h4>
    results of get all licenses
        <a href="#v0.0.41_openapi_licenses_resp">v0.0.41_openapi_licenses_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0041GetNode">
    </a><div class="method-path"><a name="slurmV0041GetNode">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.41/node/{node_name}</code></pre></div>
    <div class="method-summary">get node info (<span class="nickname">slurmV0041GetNode</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">node_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> — Node name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Filter jobs since update timestamp default: null </div><div class="param">flags (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Query flags default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.41_openapi_nodes_resp">v0.0.41_openapi_nodes_resp</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "nodes" : [ {
    "reason" : "reason",
    "gpu_spec" : "gpu_spec",
    "slurmd_start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "features" : [ "features", "features" ],
    "hostname" : "hostname",
    "cores" : 6,
    "reason_changed_at" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "reservation" : "reservation",
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : [ "INVALID", "INVALID" ],
    "sockets" : 9,
    "energy" : {
      "current_watts" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "base_consumed_energy" : 3,
      "last_collected" : 7,
      "consumed_energy" : 2,
      "previous_consumed_energy" : 4,
      "average_watts" : 9
    },
    "partitions" : [ "partitions", "partitions" ],
    "gres_drained" : "gres_drained",
    "weight" : 8,
    "version" : "version",
    "gres_used" : "gres_used",
    "mcs_label" : "mcs_label",
    "real_memory" : 1,
    "instance_id" : "instance_id",
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 1,
    "name" : "name",
    "resume_after" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "temporary_disk" : 6,
    "tres_used" : "tres_used",
    "effective_cpus" : 7,
    "instance_type" : "instance_type",
    "external_sensors" : "{}",
    "res_cores_per_gpu" : 6,
    "boards" : 0,
    "alloc_cpus" : 1,
    "active_features" : [ "active_features", "active_features" ],
    "reason_set_by_user" : "reason_set_by_user",
    "free_mem" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "alloc_idle_cpus" : 4,
    "extra" : "extra",
    "operating_system" : "operating_system",
    "power" : "{}",
    "architecture" : "architecture",
    "owner" : "owner",
    "cluster_name" : "cluster_name",
    "address" : "address",
    "cpus" : 2,
    "tres_weighted" : 5.025004791520295,
    "gres" : "gres",
    "threads" : 9,
    "boot_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "alloc_memory" : 7,
    "specialized_memory" : 1,
    "specialized_cpus" : "specialized_cpus",
    "specialized_cores" : 1,
    "last_busy" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "comment" : "comment",
    "next_state_after_reboot" : [ "INVALID", "INVALID" ],
    "cpu_load" : 5
  }, {
    "reason" : "reason",
    "gpu_spec" : "gpu_spec",
    "slurmd_start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "features" : [ "features", "features" ],
    "hostname" : "hostname",
    "cores" : 6,
    "reason_changed_at" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "reservation" : "reservation",
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : [ "INVALID", "INVALID" ],
    "sockets" : 9,
    "energy" : {
      "current_watts" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "base_consumed_energy" : 3,
      "last_collected" : 7,
      "consumed_energy" : 2,
      "previous_consumed_energy" : 4,
      "average_watts" : 9
    },
    "partitions" : [ "partitions", "partitions" ],
    "gres_drained" : "gres_drained",
    "weight" : 8,
    "version" : "version",
    "gres_used" : "gres_used",
    "mcs_label" : "mcs_label",
    "real_memory" : 1,
    "instance_id" : "instance_id",
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 1,
    "name" : "name",
    "resume_after" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "temporary_disk" : 6,
    "tres_used" : "tres_used",
    "effective_cpus" : 7,
    "instance_type" : "instance_type",
    "external_sensors" : "{}",
    "res_cores_per_gpu" : 6,
    "boards" : 0,
    "alloc_cpus" : 1,
    "active_features" : [ "active_features", "active_features" ],
    "reason_set_by_user" : "reason_set_by_user",
    "free_mem" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "alloc_idle_cpus" : 4,
    "extra" : "extra",
    "operating_system" : "operating_system",
    "power" : "{}",
    "architecture" : "architecture",
    "owner" : "owner",
    "cluster_name" : "cluster_name",
    "address" : "address",
    "cpus" : 2,
    "tres_weighted" : 5.025004791520295,
    "gres" : "gres",
    "threads" : 9,
    "boot_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "alloc_memory" : 7,
    "specialized_memory" : 1,
    "specialized_cpus" : "specialized_cpus",
    "specialized_cores" : 1,
    "last_busy" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "comment" : "comment",
    "next_state_after_reboot" : [ "INVALID", "INVALID" ],
    "cpu_load" : 5
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "last_update" : {
    "number" : 9,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/jsonrequest</div>
    <pre class="example"><code>{
  "nodes" : [ {
    "reason" : "reason",
    "gpu_spec" : "gpu_spec",
    "slurmd_start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "features" : [ "features", "features" ],
    "hostname" : "hostname",
    "cores" : 6,
    "reason_changed_at" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "reservation" : "reservation",
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : [ "INVALID", "INVALID" ],
    "sockets" : 9,
    "energy" : {
      "current_watts" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "base_consumed_energy" : 3,
      "last_collected" : 7,
      "consumed_energy" : 2,
      "previous_consumed_energy" : 4,
      "average_watts" : 9
    },
    "partitions" : [ "partitions", "partitions" ],
    "gres_drained" : "gres_drained",
    "weight" : 8,
    "version" : "version",
    "gres_used" : "gres_used",
    "mcs_label" : "mcs_label",
    "real_memory" : 1,
    "instance_id" : "instance_id",
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 1,
    "name" : "name",
    "resume_after" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "temporary_disk" : 6,
    "tres_used" : "tres_used",
    "effective_cpus" : 7,
    "instance_type" : "instance_type",
    "external_sensors" : "{}",
    "res_cores_per_gpu" : 6,
    "boards" : 0,
    "alloc_cpus" : 1,
    "active_features" : [ "active_features", "active_features" ],
    "reason_set_by_user" : "reason_set_by_user",
    "free_mem" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "alloc_idle_cpus" : 4,
    "extra" : "extra",
    "operating_system" : "operating_system",
    "power" : "{}",
    "architecture" : "architecture",
    "owner" : "owner",
    "cluster_name" : "cluster_name",
    "address" : "address",
    "cpus" : 2,
    "tres_weighted" : 5.025004791520295,
    "gres" : "gres",
    "threads" : 9,
    "boot_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "alloc_memory" : 7,
    "specialized_memory" : 1,
    "specialized_cpus" : "specialized_cpus",
    "specialized_cores" : 1,
    "last_busy" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "comment" : "comment",
    "next_state_after_reboot" : [ "INVALID", "INVALID" ],
    "cpu_load" : 5
  }, {
    "reason" : "reason",
    "gpu_spec" : "gpu_spec",
    "slurmd_start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "features" : [ "features", "features" ],
    "hostname" : "hostname",
    "cores" : 6,
    "reason_changed_at" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "reservation" : "reservation",
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : [ "INVALID", "INVALID" ],
    "sockets" : 9,
    "energy" : {
      "current_watts" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "base_consumed_energy" : 3,
      "last_collected" : 7,
      "consumed_energy" : 2,
      "previous_consumed_energy" : 4,
      "average_watts" : 9
    },
    "partitions" : [ "partitions", "partitions" ],
    "gres_drained" : "gres_drained",
    "weight" : 8,
    "version" : "version",
    "gres_used" : "gres_used",
    "mcs_label" : "mcs_label",
    "real_memory" : 1,
    "instance_id" : "instance_id",
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 1,
    "name" : "name",
    "resume_after" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "temporary_disk" : 6,
    "tres_used" : "tres_used",
    "effective_cpus" : 7,
    "instance_type" : "instance_type",
    "external_sensors" : "{}",
    "res_cores_per_gpu" : 6,
    "boards" : 0,
    "alloc_cpus" : 1,
    "active_features" : [ "active_features", "active_features" ],
    "reason_set_by_user" : "reason_set_by_user",
    "free_mem" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "alloc_idle_cpus" : 4,
    "extra" : "extra",
    "operating_system" : "operating_system",
    "power" : "{}",
    "architecture" : "architecture",
    "owner" : "owner",
    "cluster_name" : "cluster_name",
    "address" : "address",
    "cpus" : 2,
    "tres_weighted" : 5.025004791520295,
    "gres" : "gres",
    "threads" : 9,
    "boot_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "alloc_memory" : 7,
    "specialized_memory" : 1,
    "specialized_cpus" : "specialized_cpus",
    "specialized_cores" : 1,
    "last_busy" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "comment" : "comment",
    "next_state_after_reboot" : [ "INVALID", "INVALID" ],
    "cpu_load" : 5
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "last_update" : {
    "number" : 9,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: text/yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: text/yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    node information
        <a href="#v0.0.41_openapi_nodes_resp">v0.0.41_openapi_nodes_resp</a>
    <h4 class="field-label">default</h4>
    node information
        <a href="#v0.0.41_openapi_nodes_resp">v0.0.41_openapi_nodes_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0041GetNodes">
    </a><div class="method-path"><a name="slurmV0041GetNodes">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.41/nodes/</code></pre></div>
    <div class="method-summary">get node(s) info (<span class="nickname">slurmV0041GetNodes</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Filter jobs since update timestamp default: null </div><div class="param">flags (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Query flags default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.41_openapi_nodes_resp">v0.0.41_openapi_nodes_resp</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "nodes" : [ {
    "reason" : "reason",
    "gpu_spec" : "gpu_spec",
    "slurmd_start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "features" : [ "features", "features" ],
    "hostname" : "hostname",
    "cores" : 6,
    "reason_changed_at" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "reservation" : "reservation",
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : [ "INVALID", "INVALID" ],
    "sockets" : 9,
    "energy" : {
      "current_watts" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "base_consumed_energy" : 3,
      "last_collected" : 7,
      "consumed_energy" : 2,
      "previous_consumed_energy" : 4,
      "average_watts" : 9
    },
    "partitions" : [ "partitions", "partitions" ],
    "gres_drained" : "gres_drained",
    "weight" : 8,
    "version" : "version",
    "gres_used" : "gres_used",
    "mcs_label" : "mcs_label",
    "real_memory" : 1,
    "instance_id" : "instance_id",
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 1,
    "name" : "name",
    "resume_after" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "temporary_disk" : 6,
    "tres_used" : "tres_used",
    "effective_cpus" : 7,
    "instance_type" : "instance_type",
    "external_sensors" : "{}",
    "res_cores_per_gpu" : 6,
    "boards" : 0,
    "alloc_cpus" : 1,
    "active_features" : [ "active_features", "active_features" ],
    "reason_set_by_user" : "reason_set_by_user",
    "free_mem" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "alloc_idle_cpus" : 4,
    "extra" : "extra",
    "operating_system" : "operating_system",
    "power" : "{}",
    "architecture" : "architecture",
    "owner" : "owner",
    "cluster_name" : "cluster_name",
    "address" : "address",
    "cpus" : 2,
    "tres_weighted" : 5.025004791520295,
    "gres" : "gres",
    "threads" : 9,
    "boot_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "alloc_memory" : 7,
    "specialized_memory" : 1,
    "specialized_cpus" : "specialized_cpus",
    "specialized_cores" : 1,
    "last_busy" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "comment" : "comment",
    "next_state_after_reboot" : [ "INVALID", "INVALID" ],
    "cpu_load" : 5
  }, {
    "reason" : "reason",
    "gpu_spec" : "gpu_spec",
    "slurmd_start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "features" : [ "features", "features" ],
    "hostname" : "hostname",
    "cores" : 6,
    "reason_changed_at" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "reservation" : "reservation",
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : [ "INVALID", "INVALID" ],
    "sockets" : 9,
    "energy" : {
      "current_watts" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "base_consumed_energy" : 3,
      "last_collected" : 7,
      "consumed_energy" : 2,
      "previous_consumed_energy" : 4,
      "average_watts" : 9
    },
    "partitions" : [ "partitions", "partitions" ],
    "gres_drained" : "gres_drained",
    "weight" : 8,
    "version" : "version",
    "gres_used" : "gres_used",
    "mcs_label" : "mcs_label",
    "real_memory" : 1,
    "instance_id" : "instance_id",
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 1,
    "name" : "name",
    "resume_after" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "temporary_disk" : 6,
    "tres_used" : "tres_used",
    "effective_cpus" : 7,
    "instance_type" : "instance_type",
    "external_sensors" : "{}",
    "res_cores_per_gpu" : 6,
    "boards" : 0,
    "alloc_cpus" : 1,
    "active_features" : [ "active_features", "active_features" ],
    "reason_set_by_user" : "reason_set_by_user",
    "free_mem" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "alloc_idle_cpus" : 4,
    "extra" : "extra",
    "operating_system" : "operating_system",
    "power" : "{}",
    "architecture" : "architecture",
    "owner" : "owner",
    "cluster_name" : "cluster_name",
    "address" : "address",
    "cpus" : 2,
    "tres_weighted" : 5.025004791520295,
    "gres" : "gres",
    "threads" : 9,
    "boot_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "alloc_memory" : 7,
    "specialized_memory" : 1,
    "specialized_cpus" : "specialized_cpus",
    "specialized_cores" : 1,
    "last_busy" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "comment" : "comment",
    "next_state_after_reboot" : [ "INVALID", "INVALID" ],
    "cpu_load" : 5
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "last_update" : {
    "number" : 9,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/jsonrequest</div>
    <pre class="example"><code>{
  "nodes" : [ {
    "reason" : "reason",
    "gpu_spec" : "gpu_spec",
    "slurmd_start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "features" : [ "features", "features" ],
    "hostname" : "hostname",
    "cores" : 6,
    "reason_changed_at" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "reservation" : "reservation",
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : [ "INVALID", "INVALID" ],
    "sockets" : 9,
    "energy" : {
      "current_watts" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "base_consumed_energy" : 3,
      "last_collected" : 7,
      "consumed_energy" : 2,
      "previous_consumed_energy" : 4,
      "average_watts" : 9
    },
    "partitions" : [ "partitions", "partitions" ],
    "gres_drained" : "gres_drained",
    "weight" : 8,
    "version" : "version",
    "gres_used" : "gres_used",
    "mcs_label" : "mcs_label",
    "real_memory" : 1,
    "instance_id" : "instance_id",
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 1,
    "name" : "name",
    "resume_after" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "temporary_disk" : 6,
    "tres_used" : "tres_used",
    "effective_cpus" : 7,
    "instance_type" : "instance_type",
    "external_sensors" : "{}",
    "res_cores_per_gpu" : 6,
    "boards" : 0,
    "alloc_cpus" : 1,
    "active_features" : [ "active_features", "active_features" ],
    "reason_set_by_user" : "reason_set_by_user",
    "free_mem" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "alloc_idle_cpus" : 4,
    "extra" : "extra",
    "operating_system" : "operating_system",
    "power" : "{}",
    "architecture" : "architecture",
    "owner" : "owner",
    "cluster_name" : "cluster_name",
    "address" : "address",
    "cpus" : 2,
    "tres_weighted" : 5.025004791520295,
    "gres" : "gres",
    "threads" : 9,
    "boot_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "alloc_memory" : 7,
    "specialized_memory" : 1,
    "specialized_cpus" : "specialized_cpus",
    "specialized_cores" : 1,
    "last_busy" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "comment" : "comment",
    "next_state_after_reboot" : [ "INVALID", "INVALID" ],
    "cpu_load" : 5
  }, {
    "reason" : "reason",
    "gpu_spec" : "gpu_spec",
    "slurmd_start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "features" : [ "features", "features" ],
    "hostname" : "hostname",
    "cores" : 6,
    "reason_changed_at" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "reservation" : "reservation",
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : [ "INVALID", "INVALID" ],
    "sockets" : 9,
    "energy" : {
      "current_watts" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "base_consumed_energy" : 3,
      "last_collected" : 7,
      "consumed_energy" : 2,
      "previous_consumed_energy" : 4,
      "average_watts" : 9
    },
    "partitions" : [ "partitions", "partitions" ],
    "gres_drained" : "gres_drained",
    "weight" : 8,
    "version" : "version",
    "gres_used" : "gres_used",
    "mcs_label" : "mcs_label",
    "real_memory" : 1,
    "instance_id" : "instance_id",
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 1,
    "name" : "name",
    "resume_after" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "temporary_disk" : 6,
    "tres_used" : "tres_used",
    "effective_cpus" : 7,
    "instance_type" : "instance_type",
    "external_sensors" : "{}",
    "res_cores_per_gpu" : 6,
    "boards" : 0,
    "alloc_cpus" : 1,
    "active_features" : [ "active_features", "active_features" ],
    "reason_set_by_user" : "reason_set_by_user",
    "free_mem" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "alloc_idle_cpus" : 4,
    "extra" : "extra",
    "operating_system" : "operating_system",
    "power" : "{}",
    "architecture" : "architecture",
    "owner" : "owner",
    "cluster_name" : "cluster_name",
    "address" : "address",
    "cpus" : 2,
    "tres_weighted" : 5.025004791520295,
    "gres" : "gres",
    "threads" : 9,
    "boot_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "alloc_memory" : 7,
    "specialized_memory" : 1,
    "specialized_cpus" : "specialized_cpus",
    "specialized_cores" : 1,
    "last_busy" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "comment" : "comment",
    "next_state_after_reboot" : [ "INVALID", "INVALID" ],
    "cpu_load" : 5
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "last_update" : {
    "number" : 9,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: text/yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: text/yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    node(s) information
        <a href="#v0.0.41_openapi_nodes_resp">v0.0.41_openapi_nodes_resp</a>
    <h4 class="field-label">default</h4>
    node(s) information
        <a href="#v0.0.41_openapi_nodes_resp">v0.0.41_openapi_nodes_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0041GetPartition">
    </a><div class="method-path"><a name="slurmV0041GetPartition">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.41/partition/{partition_name}</code></pre></div>
    <div class="method-summary">get partition info (<span class="nickname">slurmV0041GetPartition</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">partition_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> — Partition name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Filter partitions since update timestamp default: null </div><div class="param">flags (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Query flags default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.41_openapi_partition_resp">v0.0.41_openapi_partition_resp</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "partitions" : [ {
    "cluster" : "cluster",
    "cpus" : {
      "task_binding" : 6,
      "total" : 1
    },
    "timeouts" : {
      "resume" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      },
      "suspend" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      }
    },
    "groups" : {
      "allowed" : "allowed"
    },
    "alternate" : "alternate",
    "select_type" : [ "CPU", "CPU" ],
    "suspend_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "priority" : {
      "tier" : 4,
      "job_factor" : 2
    },
    "node_sets" : "node_sets",
    "maximums" : {
      "shares" : 7,
      "nodes" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "over_time_limit" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_socket" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "oversubscribe" : {
        "jobs" : 9,
        "flags" : [ "force", "force" ]
      },
      "memory_per_cpu" : 2,
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_cpu" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "nodes" : {
      "configured" : "configured",
      "total" : 0,
      "allowed_allocation" : "allowed_allocation"
    },
    "partition" : {
      "state" : [ "INACTIVE", "INACTIVE" ]
    },
    "qos" : {
      "deny" : "deny",
      "allowed" : "allowed",
      "assigned" : "assigned"
    },
    "defaults" : {
      "partition_memory_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "memory_per_cpu" : 5,
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "job" : "job",
      "partition_memory_per_cpu" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "name" : "name",
    "tres" : {
      "configured" : "configured",
      "billing_weights" : "billing_weights"
    },
    "accounts" : {
      "deny" : "deny",
      "allowed" : "allowed"
    },
    "minimums" : {
      "nodes" : 3
    },
    "grace_time" : 5
  }, {
    "cluster" : "cluster",
    "cpus" : {
      "task_binding" : 6,
      "total" : 1
    },
    "timeouts" : {
      "resume" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      },
      "suspend" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      }
    },
    "groups" : {
      "allowed" : "allowed"
    },
    "alternate" : "alternate",
    "select_type" : [ "CPU", "CPU" ],
    "suspend_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "priority" : {
      "tier" : 4,
      "job_factor" : 2
    },
    "node_sets" : "node_sets",
    "maximums" : {
      "shares" : 7,
      "nodes" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "over_time_limit" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_socket" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "oversubscribe" : {
        "jobs" : 9,
        "flags" : [ "force", "force" ]
      },
      "memory_per_cpu" : 2,
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_cpu" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "nodes" : {
      "configured" : "configured",
      "total" : 0,
      "allowed_allocation" : "allowed_allocation"
    },
    "partition" : {
      "state" : [ "INACTIVE", "INACTIVE" ]
    },
    "qos" : {
      "deny" : "deny",
      "allowed" : "allowed",
      "assigned" : "assigned"
    },
    "defaults" : {
      "partition_memory_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "memory_per_cpu" : 5,
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "job" : "job",
      "partition_memory_per_cpu" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "name" : "name",
    "tres" : {
      "configured" : "configured",
      "billing_weights" : "billing_weights"
    },
    "accounts" : {
      "deny" : "deny",
      "allowed" : "allowed"
    },
    "minimums" : {
      "nodes" : 3
    },
    "grace_time" : 5
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "last_update" : {
    "number" : 7,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/jsonrequest</div>
    <pre class="example"><code>{
  "partitions" : [ {
    "cluster" : "cluster",
    "cpus" : {
      "task_binding" : 6,
      "total" : 1
    },
    "timeouts" : {
      "resume" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      },
      "suspend" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      }
    },
    "groups" : {
      "allowed" : "allowed"
    },
    "alternate" : "alternate",
    "select_type" : [ "CPU", "CPU" ],
    "suspend_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "priority" : {
      "tier" : 4,
      "job_factor" : 2
    },
    "node_sets" : "node_sets",
    "maximums" : {
      "shares" : 7,
      "nodes" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "over_time_limit" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_socket" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "oversubscribe" : {
        "jobs" : 9,
        "flags" : [ "force", "force" ]
      },
      "memory_per_cpu" : 2,
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_cpu" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "nodes" : {
      "configured" : "configured",
      "total" : 0,
      "allowed_allocation" : "allowed_allocation"
    },
    "partition" : {
      "state" : [ "INACTIVE", "INACTIVE" ]
    },
    "qos" : {
      "deny" : "deny",
      "allowed" : "allowed",
      "assigned" : "assigned"
    },
    "defaults" : {
      "partition_memory_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "memory_per_cpu" : 5,
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "job" : "job",
      "partition_memory_per_cpu" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "name" : "name",
    "tres" : {
      "configured" : "configured",
      "billing_weights" : "billing_weights"
    },
    "accounts" : {
      "deny" : "deny",
      "allowed" : "allowed"
    },
    "minimums" : {
      "nodes" : 3
    },
    "grace_time" : 5
  }, {
    "cluster" : "cluster",
    "cpus" : {
      "task_binding" : 6,
      "total" : 1
    },
    "timeouts" : {
      "resume" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      },
      "suspend" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      }
    },
    "groups" : {
      "allowed" : "allowed"
    },
    "alternate" : "alternate",
    "select_type" : [ "CPU", "CPU" ],
    "suspend_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "priority" : {
      "tier" : 4,
      "job_factor" : 2
    },
    "node_sets" : "node_sets",
    "maximums" : {
      "shares" : 7,
      "nodes" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "over_time_limit" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_socket" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "oversubscribe" : {
        "jobs" : 9,
        "flags" : [ "force", "force" ]
      },
      "memory_per_cpu" : 2,
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_cpu" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "nodes" : {
      "configured" : "configured",
      "total" : 0,
      "allowed_allocation" : "allowed_allocation"
    },
    "partition" : {
      "state" : [ "INACTIVE", "INACTIVE" ]
    },
    "qos" : {
      "deny" : "deny",
      "allowed" : "allowed",
      "assigned" : "assigned"
    },
    "defaults" : {
      "partition_memory_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "memory_per_cpu" : 5,
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "job" : "job",
      "partition_memory_per_cpu" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "name" : "name",
    "tres" : {
      "configured" : "configured",
      "billing_weights" : "billing_weights"
    },
    "accounts" : {
      "deny" : "deny",
      "allowed" : "allowed"
    },
    "minimums" : {
      "nodes" : 3
    },
    "grace_time" : 5
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "last_update" : {
    "number" : 7,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: text/yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: text/yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    partition information
        <a href="#v0.0.41_openapi_partition_resp">v0.0.41_openapi_partition_resp</a>
    <h4 class="field-label">default</h4>
    partition information
        <a href="#v0.0.41_openapi_partition_resp">v0.0.41_openapi_partition_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0041GetPartitions">
    </a><div class="method-path"><a name="slurmV0041GetPartitions">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.41/partitions/</code></pre></div>
    <div class="method-summary">get all partition info (<span class="nickname">slurmV0041GetPartitions</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Filter partitions since update timestamp default: null </div><div class="param">flags (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Query flags default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.41_openapi_partition_resp">v0.0.41_openapi_partition_resp</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "partitions" : [ {
    "cluster" : "cluster",
    "cpus" : {
      "task_binding" : 6,
      "total" : 1
    },
    "timeouts" : {
      "resume" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      },
      "suspend" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      }
    },
    "groups" : {
      "allowed" : "allowed"
    },
    "alternate" : "alternate",
    "select_type" : [ "CPU", "CPU" ],
    "suspend_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "priority" : {
      "tier" : 4,
      "job_factor" : 2
    },
    "node_sets" : "node_sets",
    "maximums" : {
      "shares" : 7,
      "nodes" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "over_time_limit" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_socket" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "oversubscribe" : {
        "jobs" : 9,
        "flags" : [ "force", "force" ]
      },
      "memory_per_cpu" : 2,
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_cpu" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "nodes" : {
      "configured" : "configured",
      "total" : 0,
      "allowed_allocation" : "allowed_allocation"
    },
    "partition" : {
      "state" : [ "INACTIVE", "INACTIVE" ]
    },
    "qos" : {
      "deny" : "deny",
      "allowed" : "allowed",
      "assigned" : "assigned"
    },
    "defaults" : {
      "partition_memory_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "memory_per_cpu" : 5,
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "job" : "job",
      "partition_memory_per_cpu" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "name" : "name",
    "tres" : {
      "configured" : "configured",
      "billing_weights" : "billing_weights"
    },
    "accounts" : {
      "deny" : "deny",
      "allowed" : "allowed"
    },
    "minimums" : {
      "nodes" : 3
    },
    "grace_time" : 5
  }, {
    "cluster" : "cluster",
    "cpus" : {
      "task_binding" : 6,
      "total" : 1
    },
    "timeouts" : {
      "resume" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      },
      "suspend" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      }
    },
    "groups" : {
      "allowed" : "allowed"
    },
    "alternate" : "alternate",
    "select_type" : [ "CPU", "CPU" ],
    "suspend_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "priority" : {
      "tier" : 4,
      "job_factor" : 2
    },
    "node_sets" : "node_sets",
    "maximums" : {
      "shares" : 7,
      "nodes" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "over_time_limit" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_socket" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "oversubscribe" : {
        "jobs" : 9,
        "flags" : [ "force", "force" ]
      },
      "memory_per_cpu" : 2,
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_cpu" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "nodes" : {
      "configured" : "configured",
      "total" : 0,
      "allowed_allocation" : "allowed_allocation"
    },
    "partition" : {
      "state" : [ "INACTIVE", "INACTIVE" ]
    },
    "qos" : {
      "deny" : "deny",
      "allowed" : "allowed",
      "assigned" : "assigned"
    },
    "defaults" : {
      "partition_memory_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "memory_per_cpu" : 5,
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "job" : "job",
      "partition_memory_per_cpu" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "name" : "name",
    "tres" : {
      "configured" : "configured",
      "billing_weights" : "billing_weights"
    },
    "accounts" : {
      "deny" : "deny",
      "allowed" : "allowed"
    },
    "minimums" : {
      "nodes" : 3
    },
    "grace_time" : 5
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "last_update" : {
    "number" : 7,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/jsonrequest</div>
    <pre class="example"><code>{
  "partitions" : [ {
    "cluster" : "cluster",
    "cpus" : {
      "task_binding" : 6,
      "total" : 1
    },
    "timeouts" : {
      "resume" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      },
      "suspend" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      }
    },
    "groups" : {
      "allowed" : "allowed"
    },
    "alternate" : "alternate",
    "select_type" : [ "CPU", "CPU" ],
    "suspend_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "priority" : {
      "tier" : 4,
      "job_factor" : 2
    },
    "node_sets" : "node_sets",
    "maximums" : {
      "shares" : 7,
      "nodes" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "over_time_limit" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_socket" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "oversubscribe" : {
        "jobs" : 9,
        "flags" : [ "force", "force" ]
      },
      "memory_per_cpu" : 2,
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_cpu" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "nodes" : {
      "configured" : "configured",
      "total" : 0,
      "allowed_allocation" : "allowed_allocation"
    },
    "partition" : {
      "state" : [ "INACTIVE", "INACTIVE" ]
    },
    "qos" : {
      "deny" : "deny",
      "allowed" : "allowed",
      "assigned" : "assigned"
    },
    "defaults" : {
      "partition_memory_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "memory_per_cpu" : 5,
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "job" : "job",
      "partition_memory_per_cpu" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "name" : "name",
    "tres" : {
      "configured" : "configured",
      "billing_weights" : "billing_weights"
    },
    "accounts" : {
      "deny" : "deny",
      "allowed" : "allowed"
    },
    "minimums" : {
      "nodes" : 3
    },
    "grace_time" : 5
  }, {
    "cluster" : "cluster",
    "cpus" : {
      "task_binding" : 6,
      "total" : 1
    },
    "timeouts" : {
      "resume" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      },
      "suspend" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      }
    },
    "groups" : {
      "allowed" : "allowed"
    },
    "alternate" : "alternate",
    "select_type" : [ "CPU", "CPU" ],
    "suspend_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "priority" : {
      "tier" : 4,
      "job_factor" : 2
    },
    "node_sets" : "node_sets",
    "maximums" : {
      "shares" : 7,
      "nodes" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "over_time_limit" : {
        "number" : 8,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_socket" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "oversubscribe" : {
        "jobs" : 9,
        "flags" : [ "force", "force" ]
      },
      "memory_per_cpu" : 2,
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_cpu" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "nodes" : {
      "configured" : "configured",
      "total" : 0,
      "allowed_allocation" : "allowed_allocation"
    },
    "partition" : {
      "state" : [ "INACTIVE", "INACTIVE" ]
    },
    "qos" : {
      "deny" : "deny",
      "allowed" : "allowed",
      "assigned" : "assigned"
    },
    "defaults" : {
      "partition_memory_per_node" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "memory_per_cpu" : 5,
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      },
      "job" : "job",
      "partition_memory_per_cpu" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "name" : "name",
    "tres" : {
      "configured" : "configured",
      "billing_weights" : "billing_weights"
    },
    "accounts" : {
      "deny" : "deny",
      "allowed" : "allowed"
    },
    "minimums" : {
      "nodes" : 3
    },
    "grace_time" : 5
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "last_update" : {
    "number" : 7,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: text/yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: text/yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    partition information
        <a href="#v0.0.41_openapi_partition_resp">v0.0.41_openapi_partition_resp</a>
    <h4 class="field-label">default</h4>
    partition information
        <a href="#v0.0.41_openapi_partition_resp">v0.0.41_openapi_partition_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0041GetPing">
    </a><div class="method-path"><a name="slurmV0041GetPing">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.41/ping/</code></pre></div>
    <div class="method-summary">ping test (<span class="nickname">slurmV0041GetPing</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.41_openapi_ping_array_resp">v0.0.41_openapi_ping_array_resp</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "pings" : [ {
    "mode" : "mode",
    "hostname" : "hostname",
    "latency" : 0,
    "pinged" : "pinged"
  }, {
    "mode" : "mode",
    "hostname" : "hostname",
    "latency" : 0,
    "pinged" : "pinged"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/jsonrequest</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "pings" : [ {
    "mode" : "mode",
    "hostname" : "hostname",
    "latency" : 0,
    "pinged" : "pinged"
  }, {
    "mode" : "mode",
    "hostname" : "hostname",
    "latency" : 0,
    "pinged" : "pinged"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: text/yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: text/yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    results of ping test
        <a href="#v0.0.41_openapi_ping_array_resp">v0.0.41_openapi_ping_array_resp</a>
    <h4 class="field-label">default</h4>
    results of ping test
        <a href="#v0.0.41_openapi_ping_array_resp">v0.0.41_openapi_ping_array_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0041GetReconfigure">
    </a><div class="method-path"><a name="slurmV0041GetReconfigure">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.41/reconfigure/</code></pre></div>
    <div class="method-summary">request slurmctld reconfigure (<span class="nickname">slurmV0041GetReconfigure</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.41_openapi_resp">v0.0.41_openapi_resp</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/jsonrequest</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: text/yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: text/yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    reconfigure request result
        <a href="#v0.0.41_openapi_resp">v0.0.41_openapi_resp</a>
    <h4 class="field-label">default</h4>
    reconfigure request result
        <a href="#v0.0.41_openapi_resp">v0.0.41_openapi_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0041GetReservation">
    </a><div class="method-path"><a name="slurmV0041GetReservation">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.41/reservation/{reservation_name}</code></pre></div>
    <div class="method-summary">get reservation info (<span class="nickname">slurmV0041GetReservation</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">reservation_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> — Reservation name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Filter reservations since update timestamp default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.41_openapi_reservation_resp">v0.0.41_openapi_reservation_resp</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "reservations" : [ {
    "end_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "flags" : [ "MAINT", "MAINT" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 6,
    "features" : "features",
    "start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "core_specializations" : [ {
      "node" : "node",
      "core" : "core"
    }, {
      "node" : "node",
      "core" : "core"
    } ],
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 1,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "core_count" : 0
  }, {
    "end_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "flags" : [ "MAINT", "MAINT" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 6,
    "features" : "features",
    "start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "core_specializations" : [ {
      "node" : "node",
      "core" : "core"
    }, {
      "node" : "node",
      "core" : "core"
    } ],
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 1,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "core_count" : 0
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "last_update" : {
    "number" : 5,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/jsonrequest</div>
    <pre class="example"><code>{
  "reservations" : [ {
    "end_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "flags" : [ "MAINT", "MAINT" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 6,
    "features" : "features",
    "start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "core_specializations" : [ {
      "node" : "node",
      "core" : "core"
    }, {
      "node" : "node",
      "core" : "core"
    } ],
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 1,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "core_count" : 0
  }, {
    "end_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "flags" : [ "MAINT", "MAINT" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 6,
    "features" : "features",
    "start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "core_specializations" : [ {
      "node" : "node",
      "core" : "core"
    }, {
      "node" : "node",
      "core" : "core"
    } ],
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 1,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "core_count" : 0
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "last_update" : {
    "number" : 5,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: text/yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: text/yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    reservation information
        <a href="#v0.0.41_openapi_reservation_resp">v0.0.41_openapi_reservation_resp</a>
    <h4 class="field-label">default</h4>
    reservation information
        <a href="#v0.0.41_openapi_reservation_resp">v0.0.41_openapi_reservation_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0041GetReservations">
    </a><div class="method-path"><a name="slurmV0041GetReservations">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.41/reservations/</code></pre></div>
    <div class="method-summary">get all reservation info (<span class="nickname">slurmV0041GetReservations</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Filter reservations since update timestamp default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.41_openapi_reservation_resp">v0.0.41_openapi_reservation_resp</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "reservations" : [ {
    "end_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "flags" : [ "MAINT", "MAINT" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 6,
    "features" : "features",
    "start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "core_specializations" : [ {
      "node" : "node",
      "core" : "core"
    }, {
      "node" : "node",
      "core" : "core"
    } ],
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 1,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "core_count" : 0
  }, {
    "end_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "flags" : [ "MAINT", "MAINT" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 6,
    "features" : "features",
    "start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "core_specializations" : [ {
      "node" : "node",
      "core" : "core"
    }, {
      "node" : "node",
      "core" : "core"
    } ],
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 1,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "core_count" : 0
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "last_update" : {
    "number" : 5,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/jsonrequest</div>
    <pre class="example"><code>{
  "reservations" : [ {
    "end_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "flags" : [ "MAINT", "MAINT" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 6,
    "features" : "features",
    "start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "core_specializations" : [ {
      "node" : "node",
      "core" : "core"
    }, {
      "node" : "node",
      "core" : "core"
    } ],
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 1,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "core_count" : 0
  }, {
    "end_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "flags" : [ "MAINT", "MAINT" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 6,
    "features" : "features",
    "start_time" : {
      "number" : 6,
      "set" : true,
      "infinite" : true
    },
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "core_specializations" : [ {
      "node" : "node",
      "core" : "core"
    }, {
      "node" : "node",
      "core" : "core"
    } ],
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 1,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : {
        "number" : 6,
        "set" : true,
        "infinite" : true
      }
    },
    "core_count" : 0
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "last_update" : {
    "number" : 5,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: text/yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: text/yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    reservation information
        <a href="#v0.0.41_openapi_reservation_resp">v0.0.41_openapi_reservation_resp</a>
    <h4 class="field-label">default</h4>
    reservation information
        <a href="#v0.0.41_openapi_reservation_resp">v0.0.41_openapi_reservation_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0041GetShares">
    </a><div class="method-path"><a name="slurmV0041GetShares">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.41/shares</code></pre></div>
    <div class="method-summary">get fairshare info (<span class="nickname">slurmV0041GetShares</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">accounts (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Accounts to query default: null </div><div class="param">users (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> — Users to query default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.41_openapi_shares_resp">v0.0.41_openapi_shares_resp</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "shares" : {
    "shares" : [ {
      "cluster" : "cluster",
      "parent" : "parent",
      "shares_normalized" : {
        "number" : 6.027456183070403,
        "set" : true,
        "infinite" : true
      },
      "usage" : 9,
      "fairshare" : {
        "level" : 2.027123023002322,
        "factor" : 3.616076749251911
      },
      "type" : [ "USER", "USER" ],
      "effective_usage" : 2.3021358869347655,
      "shares" : {
        "number" : 1,
        "set" : true,
        "infinite" : true
      },
      "partition" : "partition",
      "usage_normalized" : {
        "number" : 7.061401241503109,
        "set" : true,
        "infinite" : true
      },
      "name" : "name",
      "tres" : {
        "run_seconds" : [ {
          "name" : "name",
          "value" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }, {
          "name" : "name",
          "value" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        } ],
        "usage" : [ {
          "name" : "name",
          "value" : 5.637376656633329
        }, {
          "name" : "name",
          "value" : 5.637376656633329
        } ],
        "group_minutes" : [ {
          "name" : "name",
          "value" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }, {
          "name" : "name",
          "value" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        } ]
      },
      "id" : 0
    }, {
      "cluster" : "cluster",
      "parent" : "parent",
      "shares_normalized" : {
        "number" : 6.027456183070403,
        "set" : true,
        "infinite" : true
      },
      "usage" : 9,
      "fairshare" : {
        "level" : 2.027123023002322,
        "factor" : 3.616076749251911
      },
      "type" : [ "USER", "USER" ],
      "effective_usage" : 2.3021358869347655,
      "shares" : {
        "number" : 1,
        "set" : true,
        "infinite" : true
      },
      "partition" : "partition",
      "usage_normalized" : {
        "number" : 7.061401241503109,
        "set" : true,
        "infinite" : true
      },
      "name" : "name",
      "tres" : {
        "run_seconds" : [ {
          "name" : "name",
          "value" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }, {
          "name" : "name",
          "value" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        } ],
        "usage" : [ {
          "name" : "name",
          "value" : 5.637376656633329
        }, {
          "name" : "name",
          "value" : 5.637376656633329
        } ],
        "group_minutes" : [ {
          "name" : "name",
          "value" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }, {
          "name" : "name",
          "value" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        } ]
      },
      "id" : 0
    } ],
    "total_shares" : 4
  },
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/jsonrequest</div>
    <pre class="example"><code>{
  "shares" : {
    "shares" : [ {
      "cluster" : "cluster",
      "parent" : "parent",
      "shares_normalized" : {
        "number" : 6.027456183070403,
        "set" : true,
        "infinite" : true
      },
      "usage" : 9,
      "fairshare" : {
        "level" : 2.027123023002322,
        "factor" : 3.616076749251911
      },
      "type" : [ "USER", "USER" ],
      "effective_usage" : 2.3021358869347655,
      "shares" : {
        "number" : 1,
        "set" : true,
        "infinite" : true
      },
      "partition" : "partition",
      "usage_normalized" : {
        "number" : 7.061401241503109,
        "set" : true,
        "infinite" : true
      },
      "name" : "name",
      "tres" : {
        "run_seconds" : [ {
          "name" : "name",
          "value" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }, {
          "name" : "name",
          "value" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        } ],
        "usage" : [ {
          "name" : "name",
          "value" : 5.637376656633329
        }, {
          "name" : "name",
          "value" : 5.637376656633329
        } ],
        "group_minutes" : [ {
          "name" : "name",
          "value" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }, {
          "name" : "name",
          "value" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        } ]
      },
      "id" : 0
    }, {
      "cluster" : "cluster",
      "parent" : "parent",
      "shares_normalized" : {
        "number" : 6.027456183070403,
        "set" : true,
        "infinite" : true
      },
      "usage" : 9,
      "fairshare" : {
        "level" : 2.027123023002322,
        "factor" : 3.616076749251911
      },
      "type" : [ "USER", "USER" ],
      "effective_usage" : 2.3021358869347655,
      "shares" : {
        "number" : 1,
        "set" : true,
        "infinite" : true
      },
      "partition" : "partition",
      "usage_normalized" : {
        "number" : 7.061401241503109,
        "set" : true,
        "infinite" : true
      },
      "name" : "name",
      "tres" : {
        "run_seconds" : [ {
          "name" : "name",
          "value" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }, {
          "name" : "name",
          "value" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        } ],
        "usage" : [ {
          "name" : "name",
          "value" : 5.637376656633329
        }, {
          "name" : "name",
          "value" : 5.637376656633329
        } ],
        "group_minutes" : [ {
          "name" : "name",
          "value" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }, {
          "name" : "name",
          "value" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        } ]
      },
      "id" : 0
    } ],
    "total_shares" : 4
  },
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: text/yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: text/yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    shares information
        <a href="#v0.0.41_openapi_shares_resp">v0.0.41_openapi_shares_resp</a>
    <h4 class="field-label">default</h4>
    shares information
        <a href="#v0.0.41_openapi_shares_resp">v0.0.41_openapi_shares_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0041PostJob">
    </a><div class="method-path"><a name="slurmV0041PostJob">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurm/v0.0.41/job/{job_id}</code></pre></div>
    <div class="method-summary">update job (<span class="nickname">slurmV0041PostJob</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">job_id (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> — JobId default: null </div>
    </div>  <!-- field-items -->

    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.41_job_desc_msg <a href="#v0.0.41_job_desc_msg">v0.0.41_job_desc_msg</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> —  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.41_openapi_job_post_response">v0.0.41_openapi_job_post_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "job_id" : "job_id",
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "step_id" : "step_id",
  "results" : [ {
    "job_id" : 0,
    "why" : "why",
    "error_code" : 6,
    "step_id" : "step_id",
    "error" : "error"
  }, {
    "job_id" : 0,
    "why" : "why",
    "error_code" : 6,
    "step_id" : "step_id",
    "error" : "error"
  } ],
  "job_submit_user_msg" : "job_submit_user_msg",
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/jsonrequest</div>
    <pre class="example"><code>{
  "job_id" : "job_id",
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "step_id" : "step_id",
  "results" : [ {
    "job_id" : 0,
    "why" : "why",
    "error_code" : 6,
    "step_id" : "step_id",
    "error" : "error"
  }, {
    "job_id" : 0,
    "why" : "why",
    "error_code" : 6,
    "step_id" : "step_id",
    "error" : "error"
  } ],
  "job_submit_user_msg" : "job_submit_user_msg",
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: text/yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: text/yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job update result
        <a href="#v0.0.41_openapi_job_post_response">v0.0.41_openapi_job_post_response</a>
    <h4 class="field-label">default</h4>
    job update result
        <a href="#v0.0.41_openapi_job_post_response">v0.0.41_openapi_job_post_response</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0041PostJobAllocate">
    </a><div class="method-path"><a name="slurmV0041PostJobAllocate">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurm/v0.0.41/job/allocate</code></pre></div>
    <div class="method-summary">submit new job allocation without any steps that must be signaled to stop (<span class="nickname">slurmV0041PostJobAllocate</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.41_job_alloc_req <a href="#v0.0.41_job_alloc_req">v0.0.41_job_alloc_req</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> —  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.41_openapi_job_alloc_resp">v0.0.41_openapi_job_alloc_resp</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "job_id" : 0,
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "job_submit_user_msg" : "job_submit_user_msg",
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/jsonrequest</div>
    <pre class="example"><code>{
  "job_id" : 0,
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "job_submit_user_msg" : "job_submit_user_msg",
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: text/yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: text/yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job allocation response
        <a href="#v0.0.41_openapi_job_alloc_resp">v0.0.41_openapi_job_alloc_resp</a>
    <h4 class="field-label">default</h4>
    job allocation response
        <a href="#v0.0.41_openapi_job_alloc_resp">v0.0.41_openapi_job_alloc_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0041PostJobSubmit">
    </a><div class="method-path"><a name="slurmV0041PostJobSubmit">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurm/v0.0.41/job/submit</code></pre></div>
    <div class="method-summary">submit new job (<span class="nickname">slurmV0041PostJobSubmit</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.41_job_submit_req <a href="#v0.0.41_job_submit_req">v0.0.41_job_submit_req</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> —  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.41_openapi_job_submit_response">v0.0.41_openapi_job_submit_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "result" : {
    "job_id" : 0,
    "error_code" : 6,
    "step_id" : "step_id",
    "error" : "error",
    "job_submit_user_msg" : "job_submit_user_msg"
  },
  "job_id" : 1,
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "step_id" : "step_id",
  "job_submit_user_msg" : "job_submit_user_msg",
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/jsonrequest</div>
    <pre class="example"><code>{
  "result" : {
    "job_id" : 0,
    "error_code" : 6,
    "step_id" : "step_id",
    "error" : "error",
    "job_submit_user_msg" : "job_submit_user_msg"
  },
  "job_id" : 1,
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "step_id" : "step_id",
  "job_submit_user_msg" : "job_submit_user_msg",
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: text/yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: text/yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job submission response
        <a href="#v0.0.41_openapi_job_submit_response">v0.0.41_openapi_job_submit_response</a>
    <h4 class="field-label">default</h4>
    job submission response
        <a href="#v0.0.41_openapi_job_submit_response">v0.0.41_openapi_job_submit_response</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0041PostNode">
    </a><div class="method-path"><a name="slurmV0041PostNode">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurm/v0.0.41/node/{node_name}</code></pre></div>
    <div class="method-summary">update node properties (<span class="nickname">slurmV0041PostNode</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">node_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> — Node name default: null </div>
    </div>  <!-- field-items -->

    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.41_update_node_msg <a href="#v0.0.41_update_node_msg">v0.0.41_update_node_msg</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> —  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.41_openapi_resp">v0.0.41_openapi_resp</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/jsonrequest</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: text/yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: text/yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/jsonrequest</code></li>
      <li><code>application/x-yaml</code></li>
      <li><code>text/yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    node update request result
        <a href="#v0.0.41_openapi_resp">v0.0.41_openapi_resp</a>
    <h4 class="field-label">default</h4>
    node update request result
        <a href="#v0.0.41_openapi_resp">v0.0.41_openapi_resp</a>
  </div> <!-- method -->
  <hr>

  <h2><a name="__Models">Models</a></h2>
  [ Jump to <a href="#__Methods">Methods</a> ]

  <h3>Table of Contents</h3>
  <ol>
    <li><a href="#v0.0.41_job_alloc_req"><code>v0.0.41_job_alloc_req</code> - </a></li>
    <li><a href="#v0.0.41_job_desc_msg"><code>v0.0.41_job_desc_msg</code> - </a></li>
    <li><a href="#v0.0.41_job_submit_req"><code>v0.0.41_job_submit_req</code> - </a></li>
    <li><a href="#v0.0.41_openapi_diag_resp"><code>v0.0.41_openapi_diag_resp</code> - </a></li>
    <li><a href="#v0.0.41_openapi_job_alloc_resp"><code>v0.0.41_openapi_job_alloc_resp</code> - </a></li>
    <li><a href="#v0.0.41_openapi_job_info_resp"><code>v0.0.41_openapi_job_info_resp</code> - </a></li>
    <li><a href="#v0.0.41_openapi_job_post_response"><code>v0.0.41_openapi_job_post_response</code> - </a></li>
    <li><a href="#v0.0.41_openapi_job_submit_response"><code>v0.0.41_openapi_job_submit_response</code> - </a></li>
    <li><a href="#v0.0.41_openapi_kill_jobs_resp"><code>v0.0.41_openapi_kill_jobs_resp</code> - </a></li>
    <li><a href="#v0.0.41_openapi_licenses_resp"><code>v0.0.41_openapi_licenses_resp</code> - </a></li>
    <li><a href="#v0.0.41_openapi_nodes_resp"><code>v0.0.41_openapi_nodes_resp</code> - </a></li>
    <li><a href="#v0.0.41_openapi_partition_resp"><code>v0.0.41_openapi_partition_resp</code> - </a></li>
    <li><a href="#v0.0.41_openapi_ping_array_resp"><code>v0.0.41_openapi_ping_array_resp</code> - </a></li>
    <li><a href="#v0.0.41_openapi_reservation_resp"><code>v0.0.41_openapi_reservation_resp</code> - </a></li>
    <li><a href="#v0.0.41_openapi_resp"><code>v0.0.41_openapi_resp</code> - </a></li>
    <li><a href="#v0.0.41_openapi_shares_resp"><code>v0.0.41_openapi_shares_resp</code> - </a></li>
    <li><a href="#v0.0.41_update_node_msg"><code>v0.0.41_update_node_msg</code> - </a></li>
    <li><a href="#v0_0_41_job_desc_msg_crontab"><code>v0_0_41_job_desc_msg_crontab</code> - </a></li>
    <li><a href="#v0_0_41_job_desc_msg_crontab_line"><code>v0_0_41_job_desc_msg_crontab_line</code> - </a></li>
    <li><a href="#v0_0_41_job_desc_msg_distribution_plane_size"><code>v0_0_41_job_desc_msg_distribution_plane_size</code> - </a></li>
    <li><a href="#v0_0_41_job_desc_msg_priority"><code>v0_0_41_job_desc_msg_priority</code> - </a></li>
    <li><a href="#v0_0_41_job_desc_msg_rlimits"><code>v0_0_41_job_desc_msg_rlimits</code> - </a></li>
    <li><a href="#v0_0_41_job_desc_msg_rlimits_as"><code>v0_0_41_job_desc_msg_rlimits_as</code> - </a></li>
    <li><a href="#v0_0_41_job_desc_msg_rlimits_core"><code>v0_0_41_job_desc_msg_rlimits_core</code> - </a></li>
    <li><a href="#v0_0_41_job_desc_msg_rlimits_cpu"><code>v0_0_41_job_desc_msg_rlimits_cpu</code> - </a></li>
    <li><a href="#v0_0_41_job_desc_msg_rlimits_data"><code>v0_0_41_job_desc_msg_rlimits_data</code> - </a></li>
    <li><a href="#v0_0_41_job_desc_msg_rlimits_fsize"><code>v0_0_41_job_desc_msg_rlimits_fsize</code> - </a></li>
    <li><a href="#v0_0_41_job_desc_msg_rlimits_memlock"><code>v0_0_41_job_desc_msg_rlimits_memlock</code> - </a></li>
    <li><a href="#v0_0_41_job_desc_msg_rlimits_nofile"><code>v0_0_41_job_desc_msg_rlimits_nofile</code> - </a></li>
    <li><a href="#v0_0_41_job_desc_msg_rlimits_nproc"><code>v0_0_41_job_desc_msg_rlimits_nproc</code> - </a></li>
    <li><a href="#v0_0_41_job_desc_msg_rlimits_rss"><code>v0_0_41_job_desc_msg_rlimits_rss</code> - </a></li>
    <li><a href="#v0_0_41_job_desc_msg_rlimits_stack"><code>v0_0_41_job_desc_msg_rlimits_stack</code> - </a></li>
    <li><a href="#v0_0_41_job_desc_msg_segment_size"><code>v0_0_41_job_desc_msg_segment_size</code> - </a></li>
    <li><a href="#v0_0_41_job_desc_msg_time_limit"><code>v0_0_41_job_desc_msg_time_limit</code> - </a></li>
    <li><a href="#v0_0_41_openapi_diag_resp_statistics"><code>v0_0_41_openapi_diag_resp_statistics</code> - </a></li>
    <li><a href="#v0_0_41_openapi_diag_resp_statistics_bf_exit"><code>v0_0_41_openapi_diag_resp_statistics_bf_exit</code> - </a></li>
    <li><a href="#v0_0_41_openapi_diag_resp_statistics_pending_rpcs_by_hostlist_inner"><code>v0_0_41_openapi_diag_resp_statistics_pending_rpcs_by_hostlist_inner</code> - </a></li>
    <li><a href="#v0_0_41_openapi_diag_resp_statistics_pending_rpcs_inner"><code>v0_0_41_openapi_diag_resp_statistics_pending_rpcs_inner</code> - </a></li>
    <li><a href="#v0_0_41_openapi_diag_resp_statistics_req_time"><code>v0_0_41_openapi_diag_resp_statistics_req_time</code> - </a></li>
    <li><a href="#v0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner"><code>v0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner</code> - </a></li>
    <li><a href="#v0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner_average_time"><code>v0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner_average_time</code> - </a></li>
    <li><a href="#v0_0_41_openapi_diag_resp_statistics_rpcs_by_user_inner"><code>v0_0_41_openapi_diag_resp_statistics_rpcs_by_user_inner</code> - </a></li>
    <li><a href="#v0_0_41_openapi_diag_resp_statistics_schedule_exit"><code>v0_0_41_openapi_diag_resp_statistics_schedule_exit</code> - </a></li>
    <li><a href="#v0_0_41_openapi_job_info_resp_jobs_inner"><code>v0_0_41_openapi_job_info_resp_jobs_inner</code> - </a></li>
    <li><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_billable_tres"><code>v0_0_41_openapi_job_info_resp_jobs_inner_billable_tres</code> - </a></li>
    <li><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code"><code>v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code</code> - </a></li>
    <li><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code_return_code"><code>v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code_return_code</code> - </a></li>
    <li><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code_signal"><code>v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code_signal</code> - </a></li>
    <li><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code_signal_id"><code>v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code_signal_id</code> - </a></li>
    <li><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_job_resources"><code>v0_0_41_openapi_job_info_resp_jobs_inner_job_resources</code> - </a></li>
    <li><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes"><code>v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes</code> - </a></li>
    <li><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner"><code>v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner</code> - </a></li>
    <li><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_cpus"><code>v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_cpus</code> - </a></li>
    <li><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_memory"><code>v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_memory</code> - </a></li>
    <li><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_sockets_inner"><code>v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_sockets_inner</code> - </a></li>
    <li><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_sockets_inner_cores_inner"><code>v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_sockets_inner_cores_inner</code> - </a></li>
    <li><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_threads_per_core"><code>v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_threads_per_core</code> - </a></li>
    <li><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_power"><code>v0_0_41_openapi_job_info_resp_jobs_inner_power</code> - </a></li>
    <li><a href="#v0_0_41_openapi_job_info_resp_last_backfill"><code>v0_0_41_openapi_job_info_resp_last_backfill</code> - </a></li>
    <li><a href="#v0_0_41_openapi_job_info_resp_last_update"><code>v0_0_41_openapi_job_info_resp_last_update</code> - </a></li>
    <li><a href="#v0_0_41_openapi_job_post_response_results_inner"><code>v0_0_41_openapi_job_post_response_results_inner</code> - </a></li>
    <li><a href="#v0_0_41_openapi_job_submit_response_result"><code>v0_0_41_openapi_job_submit_response_result</code> - </a></li>
    <li><a href="#v0_0_41_openapi_kill_jobs_resp_status_inner"><code>v0_0_41_openapi_kill_jobs_resp_status_inner</code> - </a></li>
    <li><a href="#v0_0_41_openapi_kill_jobs_resp_status_inner_error"><code>v0_0_41_openapi_kill_jobs_resp_status_inner_error</code> - </a></li>
    <li><a href="#v0_0_41_openapi_kill_jobs_resp_status_inner_federation"><code>v0_0_41_openapi_kill_jobs_resp_status_inner_federation</code> - </a></li>
    <li><a href="#v0_0_41_openapi_kill_jobs_resp_status_inner_job_id"><code>v0_0_41_openapi_kill_jobs_resp_status_inner_job_id</code> - </a></li>
    <li><a href="#v0_0_41_openapi_licenses_resp_last_update"><code>v0_0_41_openapi_licenses_resp_last_update</code> - </a></li>
    <li><a href="#v0_0_41_openapi_licenses_resp_licenses_inner"><code>v0_0_41_openapi_licenses_resp_licenses_inner</code> - </a></li>
    <li><a href="#v0_0_41_openapi_nodes_resp_last_update"><code>v0_0_41_openapi_nodes_resp_last_update</code> - </a></li>
    <li><a href="#v0_0_41_openapi_nodes_resp_nodes_inner"><code>v0_0_41_openapi_nodes_resp_nodes_inner</code> - </a></li>
    <li><a href="#v0_0_41_openapi_nodes_resp_nodes_inner_energy"><code>v0_0_41_openapi_nodes_resp_nodes_inner_energy</code> - </a></li>
    <li><a href="#v0_0_41_openapi_partition_resp_last_update"><code>v0_0_41_openapi_partition_resp_last_update</code> - </a></li>
    <li><a href="#v0_0_41_openapi_partition_resp_partitions_inner"><code>v0_0_41_openapi_partition_resp_partitions_inner</code> - </a></li>
    <li><a href="#v0_0_41_openapi_partition_resp_partitions_inner_accounts"><code>v0_0_41_openapi_partition_resp_partitions_inner_accounts</code> - </a></li>
    <li><a href="#v0_0_41_openapi_partition_resp_partitions_inner_cpus"><code>v0_0_41_openapi_partition_resp_partitions_inner_cpus</code> - </a></li>
    <li><a href="#v0_0_41_openapi_partition_resp_partitions_inner_defaults"><code>v0_0_41_openapi_partition_resp_partitions_inner_defaults</code> - </a></li>
    <li><a href="#v0_0_41_openapi_partition_resp_partitions_inner_groups"><code>v0_0_41_openapi_partition_resp_partitions_inner_groups</code> - </a></li>
    <li><a href="#v0_0_41_openapi_partition_resp_partitions_inner_maximums"><code>v0_0_41_openapi_partition_resp_partitions_inner_maximums</code> - </a></li>
    <li><a href="#v0_0_41_openapi_partition_resp_partitions_inner_maximums_oversubscribe"><code>v0_0_41_openapi_partition_resp_partitions_inner_maximums_oversubscribe</code> - </a></li>
    <li><a href="#v0_0_41_openapi_partition_resp_partitions_inner_minimums"><code>v0_0_41_openapi_partition_resp_partitions_inner_minimums</code> - </a></li>
    <li><a href="#v0_0_41_openapi_partition_resp_partitions_inner_nodes"><code>v0_0_41_openapi_partition_resp_partitions_inner_nodes</code> - </a></li>
    <li><a href="#v0_0_41_openapi_partition_resp_partitions_inner_partition"><code>v0_0_41_openapi_partition_resp_partitions_inner_partition</code> - </a></li>
    <li><a href="#v0_0_41_openapi_partition_resp_partitions_inner_priority"><code>v0_0_41_openapi_partition_resp_partitions_inner_priority</code> - </a></li>
    <li><a href="#v0_0_41_openapi_partition_resp_partitions_inner_qos"><code>v0_0_41_openapi_partition_resp_partitions_inner_qos</code> - </a></li>
    <li><a href="#v0_0_41_openapi_partition_resp_partitions_inner_timeouts"><code>v0_0_41_openapi_partition_resp_partitions_inner_timeouts</code> - </a></li>
    <li><a href="#v0_0_41_openapi_partition_resp_partitions_inner_tres"><code>v0_0_41_openapi_partition_resp_partitions_inner_tres</code> - </a></li>
    <li><a href="#v0_0_41_openapi_ping_array_resp_pings_inner"><code>v0_0_41_openapi_ping_array_resp_pings_inner</code> - </a></li>
    <li><a href="#v0_0_41_openapi_reservation_resp_last_update"><code>v0_0_41_openapi_reservation_resp_last_update</code> - </a></li>
    <li><a href="#v0_0_41_openapi_reservation_resp_reservations_inner"><code>v0_0_41_openapi_reservation_resp_reservations_inner</code> - </a></li>
    <li><a href="#v0_0_41_openapi_reservation_resp_reservations_inner_core_specializations_inner"><code>v0_0_41_openapi_reservation_resp_reservations_inner_core_specializations_inner</code> - </a></li>
    <li><a href="#v0_0_41_openapi_reservation_resp_reservations_inner_purge_completed"><code>v0_0_41_openapi_reservation_resp_reservations_inner_purge_completed</code> - </a></li>
    <li><a href="#v0_0_41_openapi_reservation_resp_reservations_inner_watts"><code>v0_0_41_openapi_reservation_resp_reservations_inner_watts</code> - </a></li>
    <li><a href="#v0_0_41_openapi_shares_resp_errors_inner"><code>v0_0_41_openapi_shares_resp_errors_inner</code> - </a></li>
    <li><a href="#v0_0_41_openapi_shares_resp_meta"><code>v0_0_41_openapi_shares_resp_meta</code> - </a></li>
    <li><a href="#v0_0_41_openapi_shares_resp_meta_client"><code>v0_0_41_openapi_shares_resp_meta_client</code> - </a></li>
    <li><a href="#v0_0_41_openapi_shares_resp_meta_plugin"><code>v0_0_41_openapi_shares_resp_meta_plugin</code> - </a></li>
    <li><a href="#v0_0_41_openapi_shares_resp_meta_slurm"><code>v0_0_41_openapi_shares_resp_meta_slurm</code> - </a></li>
    <li><a href="#v0_0_41_openapi_shares_resp_meta_slurm_version"><code>v0_0_41_openapi_shares_resp_meta_slurm_version</code> - </a></li>
    <li><a href="#v0_0_41_openapi_shares_resp_shares"><code>v0_0_41_openapi_shares_resp_shares</code> - </a></li>
    <li><a href="#v0_0_41_openapi_shares_resp_shares_shares_inner"><code>v0_0_41_openapi_shares_resp_shares_shares_inner</code> - </a></li>
    <li><a href="#v0_0_41_openapi_shares_resp_shares_shares_inner_fairshare"><code>v0_0_41_openapi_shares_resp_shares_shares_inner_fairshare</code> - </a></li>
    <li><a href="#v0_0_41_openapi_shares_resp_shares_shares_inner_shares"><code>v0_0_41_openapi_shares_resp_shares_shares_inner_shares</code> - </a></li>
    <li><a href="#v0_0_41_openapi_shares_resp_shares_shares_inner_shares_normalized"><code>v0_0_41_openapi_shares_resp_shares_shares_inner_shares_normalized</code> - </a></li>
    <li><a href="#v0_0_41_openapi_shares_resp_shares_shares_inner_tres"><code>v0_0_41_openapi_shares_resp_shares_shares_inner_tres</code> - </a></li>
    <li><a href="#v0_0_41_openapi_shares_resp_shares_shares_inner_tres_run_seconds_inner"><code>v0_0_41_openapi_shares_resp_shares_shares_inner_tres_run_seconds_inner</code> - </a></li>
    <li><a href="#v0_0_41_openapi_shares_resp_shares_shares_inner_tres_run_seconds_inner_value"><code>v0_0_41_openapi_shares_resp_shares_shares_inner_tres_run_seconds_inner_value</code> - </a></li>
    <li><a href="#v0_0_41_openapi_shares_resp_shares_shares_inner_tres_usage_inner"><code>v0_0_41_openapi_shares_resp_shares_shares_inner_tres_usage_inner</code> - </a></li>
    <li><a href="#v0_0_41_openapi_shares_resp_shares_shares_inner_usage_normalized"><code>v0_0_41_openapi_shares_resp_shares_shares_inner_usage_normalized</code> - </a></li>
    <li><a href="#v0_0_41_openapi_shares_resp_warnings_inner"><code>v0_0_41_openapi_shares_resp_warnings_inner</code> - </a></li>
    <li><a href="#v0_0_41_update_node_msg_resume_after"><code>v0_0_41_update_node_msg_resume_after</code> - </a></li>
    <li><a href="#v0_0_41_update_node_msg_weight"><code>v0_0_41_update_node_msg_weight</code> - </a></li>
  </ol>

  <div class="model">
    <h3><a name="v0.0.41_job_alloc_req"><code>v0.0.41_job_alloc_req</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">hetjob (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.41_job_desc_msg">array[v0.0.41_job_desc_msg]</a></span> HetJob description </div>
<div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.41_job_desc_msg">v0.0.41_job_desc_msg</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.41_job_desc_msg"><code>v0.0.41_job_desc_msg</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">account_gather_frequency (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">admin_comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">allocation_node_list (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">allocation_node_port (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">argv (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">array (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">batch_features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">begin_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">burst_buffer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">clusters (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">cluster_constraint (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">contiguous (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">container (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">container_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">core_specification (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">thread_specification (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">cpu_binding (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">cpu_binding_flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">cpu_frequency (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">cpus_per_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">crontab (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_crontab">v0_0_41_job_desc_msg_crontab</a></span>  </div>
<div class="param">deadline (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">delay_boot (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">dependency (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">end_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">environment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">rlimits (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_rlimits">v0_0_41_job_desc_msg_rlimits</a></span>  </div>
<div class="param">excluded_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">extra (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">constraints (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">group_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">hetjob_group (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">immediate (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">kill_on_node_fail (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">licenses (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">mail_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">mail_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">mcs_label (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">memory_binding (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">memory_binding_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">memory_per_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">network (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">nice (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">tasks (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">open_mode (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">reserve_ports (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">overcommit (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">distribution_plane_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_distribution_plane_size">v0_0_41_job_desc_msg_distribution_plane_size</a></span>  </div>
<div class="param">power_flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#AnyType">array[oas_any_type_not_mapped]</a></span>  </div>
<div class="param">prefer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">hold (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Hold (true) or release (false) job </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_priority">v0_0_41_job_desc_msg_priority</a></span>  </div>
<div class="param">profile (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">reboot (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">required_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">requeue (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">reservation (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">resv_mpi_ports (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of reserve communication ports. Can only be used if slurmstepd step manager is enabled. format: int32</div>
<div class="param">script (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job batch script. Only first component in a HetJob is populated or honored. </div>
<div class="param">shared (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">exclusive (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">oversubscribe (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">site_factor (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">spank_environment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">distribution (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">time_limit (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">time_minimum (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">tres_bind (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_freq (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_per_job (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_per_task (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">user_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">wait_all_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">kill_warning_flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">kill_warning_signal (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">kill_warning_delay (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_distribution_plane_size">v0_0_41_job_desc_msg_distribution_plane_size</a></span>  </div>
<div class="param">current_working_directory (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">cpus_per_task (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">minimum_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">maximum_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">minimum_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">maximum_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">minimum_boards_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">minimum_sockets_per_board (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">sockets_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">threads_per_core (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">tasks_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">tasks_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">tasks_per_core (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">tasks_per_board (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">ntasks_per_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">minimum_cpus_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">memory_per_cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">memory_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">temporary_disk_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">selinux_context (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">required_switches (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">segment_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_segment_size">v0_0_41_job_desc_msg_segment_size</a></span>  </div>
<div class="param">standard_error (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">standard_input (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">standard_output (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">wait_for_switch (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">wckey (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">x11 (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">x11_magic_cookie (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">x11_target_host (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">x11_target_port (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.41_job_submit_req"><code>v0.0.41_job_submit_req</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">script (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Deprecated. Populate script field in jobs[0] or job. </div>
<div class="param">jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.41_job_desc_msg">array[v0.0.41_job_desc_msg]</a></span> HetJob description </div>
<div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.41_job_desc_msg">v0.0.41_job_desc_msg</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.41_openapi_diag_resp"><code>v0.0.41_openapi_diag_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">statistics </div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics">v0_0_41_openapi_diag_resp_statistics</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_meta">v0_0_41_openapi_shares_resp_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_errors_inner">array[v0_0_41_openapi_shares_resp_errors_inner]</a></span> Query errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_warnings_inner">array[v0_0_41_openapi_shares_resp_warnings_inner]</a></span> Query warnings </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.41_openapi_job_alloc_resp"><code>v0.0.41_openapi_job_alloc_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> submited JobId format: int32</div>
<div class="param">job_submit_user_msg (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> job submission user message </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_meta">v0_0_41_openapi_shares_resp_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_errors_inner">array[v0_0_41_openapi_shares_resp_errors_inner]</a></span> Query errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_warnings_inner">array[v0_0_41_openapi_shares_resp_warnings_inner]</a></span> Query warnings </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.41_openapi_job_info_resp"><code>v0.0.41_openapi_job_info_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">jobs </div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_job_info_resp_jobs_inner">array[v0_0_41_openapi_job_info_resp_jobs_inner]</a></span> list of jobs </div>
<div class="param">last_backfill </div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_job_info_resp_last_backfill">v0_0_41_openapi_job_info_resp_last_backfill</a></span>  </div>
<div class="param">last_update </div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_job_info_resp_last_update">v0_0_41_openapi_job_info_resp_last_update</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_meta">v0_0_41_openapi_shares_resp_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_errors_inner">array[v0_0_41_openapi_shares_resp_errors_inner]</a></span> Query errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_warnings_inner">array[v0_0_41_openapi_shares_resp_warnings_inner]</a></span> Query warnings </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.41_openapi_job_post_response"><code>v0.0.41_openapi_job_post_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">results (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_job_post_response_results_inner">array[v0_0_41_openapi_job_post_response_results_inner]</a></span> Job update results </div>
<div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> First updated JobId - Use results instead </div>
<div class="param">step_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> First updated StepID - Use results instead </div>
<div class="param">job_submit_user_msg (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> First updated Job submision user message - Use results instead </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_meta">v0_0_41_openapi_shares_resp_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_errors_inner">array[v0_0_41_openapi_shares_resp_errors_inner]</a></span> Query errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_warnings_inner">array[v0_0_41_openapi_shares_resp_warnings_inner]</a></span> Query warnings </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.41_openapi_job_submit_response"><code>v0.0.41_openapi_job_submit_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">result (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_job_submit_response_result">v0_0_41_openapi_job_submit_response_result</a></span>  </div>
<div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> submited JobId format: int32</div>
<div class="param">step_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> submited StepID </div>
<div class="param">job_submit_user_msg (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> job submision user message </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_meta">v0_0_41_openapi_shares_resp_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_errors_inner">array[v0_0_41_openapi_shares_resp_errors_inner]</a></span> Query errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_warnings_inner">array[v0_0_41_openapi_shares_resp_warnings_inner]</a></span> Query warnings </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.41_openapi_kill_jobs_resp"><code>v0.0.41_openapi_kill_jobs_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">status </div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_kill_jobs_resp_status_inner">array[v0_0_41_openapi_kill_jobs_resp_status_inner]</a></span> resultant status of signal request </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_meta">v0_0_41_openapi_shares_resp_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_errors_inner">array[v0_0_41_openapi_shares_resp_errors_inner]</a></span> Query errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_warnings_inner">array[v0_0_41_openapi_shares_resp_warnings_inner]</a></span> Query warnings </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.41_openapi_licenses_resp"><code>v0.0.41_openapi_licenses_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">licenses </div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_licenses_resp_licenses_inner">array[v0_0_41_openapi_licenses_resp_licenses_inner]</a></span> list of licenses </div>
<div class="param">last_update </div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_licenses_resp_last_update">v0_0_41_openapi_licenses_resp_last_update</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_meta">v0_0_41_openapi_shares_resp_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_errors_inner">array[v0_0_41_openapi_shares_resp_errors_inner]</a></span> Query errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_warnings_inner">array[v0_0_41_openapi_shares_resp_warnings_inner]</a></span> Query warnings </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.41_openapi_nodes_resp"><code>v0.0.41_openapi_nodes_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">nodes </div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_nodes_resp_nodes_inner">array[v0_0_41_openapi_nodes_resp_nodes_inner]</a></span> list of nodes </div>
<div class="param">last_update </div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_nodes_resp_last_update">v0_0_41_openapi_nodes_resp_last_update</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_meta">v0_0_41_openapi_shares_resp_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_errors_inner">array[v0_0_41_openapi_shares_resp_errors_inner]</a></span> Query errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_warnings_inner">array[v0_0_41_openapi_shares_resp_warnings_inner]</a></span> Query warnings </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.41_openapi_partition_resp"><code>v0.0.41_openapi_partition_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">partitions </div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_partition_resp_partitions_inner">array[v0_0_41_openapi_partition_resp_partitions_inner]</a></span> list of partitions </div>
<div class="param">last_update </div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_partition_resp_last_update">v0_0_41_openapi_partition_resp_last_update</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_meta">v0_0_41_openapi_shares_resp_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_errors_inner">array[v0_0_41_openapi_shares_resp_errors_inner]</a></span> Query errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_warnings_inner">array[v0_0_41_openapi_shares_resp_warnings_inner]</a></span> Query warnings </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.41_openapi_ping_array_resp"><code>v0.0.41_openapi_ping_array_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">pings </div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_ping_array_resp_pings_inner">array[v0_0_41_openapi_ping_array_resp_pings_inner]</a></span> pings </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_meta">v0_0_41_openapi_shares_resp_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_errors_inner">array[v0_0_41_openapi_shares_resp_errors_inner]</a></span> Query errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_warnings_inner">array[v0_0_41_openapi_shares_resp_warnings_inner]</a></span> Query warnings </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.41_openapi_reservation_resp"><code>v0.0.41_openapi_reservation_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">reservations </div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_reservation_resp_reservations_inner">array[v0_0_41_openapi_reservation_resp_reservations_inner]</a></span> list of reservations </div>
<div class="param">last_update </div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_reservation_resp_last_update">v0_0_41_openapi_reservation_resp_last_update</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_meta">v0_0_41_openapi_shares_resp_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_errors_inner">array[v0_0_41_openapi_shares_resp_errors_inner]</a></span> Query errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_warnings_inner">array[v0_0_41_openapi_shares_resp_warnings_inner]</a></span> Query warnings </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.41_openapi_resp"><code>v0.0.41_openapi_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_meta">v0_0_41_openapi_shares_resp_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_errors_inner">array[v0_0_41_openapi_shares_resp_errors_inner]</a></span> Query errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_warnings_inner">array[v0_0_41_openapi_shares_resp_warnings_inner]</a></span> Query warnings </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.41_openapi_shares_resp"><code>v0.0.41_openapi_shares_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">shares </div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_shares">v0_0_41_openapi_shares_resp_shares</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_meta">v0_0_41_openapi_shares_resp_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_errors_inner">array[v0_0_41_openapi_shares_resp_errors_inner]</a></span> Query errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_warnings_inner">array[v0_0_41_openapi_shares_resp_warnings_inner]</a></span> Query warnings </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.41_update_node_msg"><code>v0.0.41_update_node_msg</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> arbitrary comment </div>
<div class="param">cpu_bind (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> default CPU binding type format: int32</div>
<div class="param">extra (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> arbitrary string </div>
<div class="param">features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> new available feature for node </div>
<div class="param">features_act (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> new active feature for node </div>
<div class="param">gres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> new generic resources for node </div>
<div class="param">address (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> communication name </div>
<div class="param">hostname (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> node's hostname </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> node to update </div>
<div class="param">state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> assign new node state </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">reason (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> reason for node being DOWN or DRAINING </div>
<div class="param">reason_uid (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> user ID of sending (needed if user root is sending message) </div>
<div class="param">resume_after (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_update_node_msg_resume_after">v0_0_41_update_node_msg_resume_after</a></span>  </div>
<div class="param">weight (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_update_node_msg_weight">v0_0_41_update_node_msg_weight</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_job_desc_msg_crontab"><code>v0_0_41_job_desc_msg_crontab</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">minute (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">hour (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">day_of_month (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">month (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">day_of_week (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">specification (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">command (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">line (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_crontab_line">v0_0_41_job_desc_msg_crontab_line</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_job_desc_msg_crontab_line"><code>v0_0_41_job_desc_msg_crontab_line</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">start (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">end (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_job_desc_msg_distribution_plane_size"><code>v0_0_41_job_desc_msg_distribution_plane_size</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">16 bit integer number with flags</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_job_desc_msg_priority"><code>v0_0_41_job_desc_msg_priority</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">Request specific job priority</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_job_desc_msg_rlimits"><code>v0_0_41_job_desc_msg_rlimits</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_rlimits_cpu">v0_0_41_job_desc_msg_rlimits_cpu</a></span>  </div>
<div class="param">fsize (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_rlimits_fsize">v0_0_41_job_desc_msg_rlimits_fsize</a></span>  </div>
<div class="param">data (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_rlimits_data">v0_0_41_job_desc_msg_rlimits_data</a></span>  </div>
<div class="param">stack (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_rlimits_stack">v0_0_41_job_desc_msg_rlimits_stack</a></span>  </div>
<div class="param">core (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_rlimits_core">v0_0_41_job_desc_msg_rlimits_core</a></span>  </div>
<div class="param">rss (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_rlimits_rss">v0_0_41_job_desc_msg_rlimits_rss</a></span>  </div>
<div class="param">nproc (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_rlimits_nproc">v0_0_41_job_desc_msg_rlimits_nproc</a></span>  </div>
<div class="param">nofile (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_rlimits_nofile">v0_0_41_job_desc_msg_rlimits_nofile</a></span>  </div>
<div class="param">memlock (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_rlimits_memlock">v0_0_41_job_desc_msg_rlimits_memlock</a></span>  </div>
<div class="param">as (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_rlimits_as">v0_0_41_job_desc_msg_rlimits_as</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_job_desc_msg_rlimits_as"><code>v0_0_41_job_desc_msg_rlimits_as</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">Address space limit.</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_job_desc_msg_rlimits_core"><code>v0_0_41_job_desc_msg_rlimits_core</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">Largest core file that can be created, in bytes.</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_job_desc_msg_rlimits_cpu"><code>v0_0_41_job_desc_msg_rlimits_cpu</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">Per-process CPU limit, in seconds.</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_job_desc_msg_rlimits_data"><code>v0_0_41_job_desc_msg_rlimits_data</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">Maximum size of data segment, in bytes.</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_job_desc_msg_rlimits_fsize"><code>v0_0_41_job_desc_msg_rlimits_fsize</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">Largest file that can be created, in bytes.</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_job_desc_msg_rlimits_memlock"><code>v0_0_41_job_desc_msg_rlimits_memlock</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">Locked-in-memory address space</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_job_desc_msg_rlimits_nofile"><code>v0_0_41_job_desc_msg_rlimits_nofile</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">Number of open files.</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_job_desc_msg_rlimits_nproc"><code>v0_0_41_job_desc_msg_rlimits_nproc</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">Number of processes.</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_job_desc_msg_rlimits_rss"><code>v0_0_41_job_desc_msg_rlimits_rss</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">Largest resident set size, in bytes. This affects swapping; processes that are exceeding their resident set size will be more likely to have physical memory taken from them.</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_job_desc_msg_rlimits_stack"><code>v0_0_41_job_desc_msg_rlimits_stack</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">Maximum size of stack segment, in bytes.</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_job_desc_msg_segment_size"><code>v0_0_41_job_desc_msg_segment_size</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">Segment size for topology/block</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_job_desc_msg_time_limit"><code>v0_0_41_job_desc_msg_time_limit</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">32 bit integer number with flags</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_diag_resp_statistics"><code>v0_0_41_openapi_diag_resp_statistics</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">statistics</div>
    <div class="field-items">
      <div class="param">parts_packed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">req_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">req_time_start (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">server_thread_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">agent_queue_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">agent_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">agent_thread_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">dbd_agent_queue_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">gettimeofday_latency (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">schedule_cycle_max (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">schedule_cycle_last (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">schedule_cycle_sum (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">schedule_cycle_total (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">schedule_cycle_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">schedule_cycle_mean_depth (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">schedule_cycle_per_minute (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">schedule_cycle_depth (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">schedule_exit (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_schedule_exit">v0_0_41_openapi_diag_resp_statistics_schedule_exit</a></span>  </div>
<div class="param">schedule_queue_length (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">jobs_submitted (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">jobs_started (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">jobs_completed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">jobs_canceled (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">jobs_failed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">jobs_pending (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">jobs_running (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">job_states_ts (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">bf_backfilled_jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_last_backfilled_jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_backfilled_het_jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_cycle_counter (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_cycle_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">bf_depth_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">bf_depth_mean_try (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">bf_cycle_sum (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">bf_cycle_last (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_cycle_max (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_exit (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_bf_exit">v0_0_41_openapi_diag_resp_statistics_bf_exit</a></span>  </div>
<div class="param">bf_last_depth (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_last_depth_try (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_depth_sum (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_depth_try_sum (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_queue_len (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_queue_len_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">bf_queue_len_sum (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_table_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_table_size_sum (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_table_size_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">bf_when_last_cycle (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">bf_active (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">rpcs_by_message_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner">array[v0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner]</a></span> RPCs by type </div>
<div class="param">rpcs_by_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_rpcs_by_user_inner">array[v0_0_41_openapi_diag_resp_statistics_rpcs_by_user_inner]</a></span> RPCs by user </div>
<div class="param">pending_rpcs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_pending_rpcs_inner">array[v0_0_41_openapi_diag_resp_statistics_pending_rpcs_inner]</a></span> Pending RPC statistics </div>
<div class="param">pending_rpcs_by_hostlist (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_pending_rpcs_by_hostlist_inner">array[v0_0_41_openapi_diag_resp_statistics_pending_rpcs_by_hostlist_inner]</a></span> Pending RPCs hostlists </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_diag_resp_statistics_bf_exit"><code>v0_0_41_openapi_diag_resp_statistics_bf_exit</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">end_job_queue (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_max_job_start (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_max_job_test (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_max_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_node_space_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">state_changed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_diag_resp_statistics_pending_rpcs_by_hostlist_inner"><code>v0_0_41_openapi_diag_resp_statistics_pending_rpcs_by_hostlist_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">Pending RPCs by hostlist</div>
    <div class="field-items">
      <div class="param">type_id </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Message type as integer format: int32</div>
<div class="param">message_type </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Message type as string </div>
<div class="param">count </div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Number of RPCs received </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_diag_resp_statistics_pending_rpcs_inner"><code>v0_0_41_openapi_diag_resp_statistics_pending_rpcs_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">Pending RPCs</div>
    <div class="field-items">
      <div class="param">type_id </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Message type as integer format: int32</div>
<div class="param">message_type </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Message type as string </div>
<div class="param">count </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of pending RPCs queued format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_diag_resp_statistics_req_time"><code>v0_0_41_openapi_diag_resp_statistics_req_time</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">64 bit integer number with flags</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner"><code>v0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">RPCs by type</div>
    <div class="field-items">
      <div class="param">type_id </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Message type as integer format: int32</div>
<div class="param">message_type </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Message type as string </div>
<div class="param">count </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of RPCs received format: int32</div>
<div class="param">queued </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of RPCs queued format: int32</div>
<div class="param">dropped </div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Number of RPCs dropped format: int64</div>
<div class="param">cycle_last </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of RPCs processed within the last RPC queue cycle format: int32</div>
<div class="param">cycle_max </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Maximum number of RPCs processed within a RPC queue cycle since start format: int32</div>
<div class="param">total_time </div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total time spent processing RPC in seconds format: int64</div>
<div class="param">average_time </div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner_average_time">v0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner_average_time</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner_average_time"><code>v0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner_average_time</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">Average time spent processing RPC in seconds</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_diag_resp_statistics_rpcs_by_user_inner"><code>v0_0_41_openapi_diag_resp_statistics_rpcs_by_user_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">RPCs by user</div>
    <div class="field-items">
      <div class="param">user_id </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> user id (numeric) format: int32</div>
<div class="param">user </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> user name </div>
<div class="param">count </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of RPCs received format: int32</div>
<div class="param">total_time </div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total time spent processing RPC in seconds format: int64</div>
<div class="param">average_time </div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner_average_time">v0_0_41_openapi_diag_resp_statistics_rpcs_by_message_type_inner_average_time</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_diag_resp_statistics_schedule_exit"><code>v0_0_41_openapi_diag_resp_statistics_schedule_exit</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">end_job_queue (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">default_queue_depth (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">max_job_start (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">max_rpc_cnt (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">max_sched_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">licenses (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_job_info_resp_jobs_inner"><code>v0_0_41_openapi_job_info_resp_jobs_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">accrue_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">admin_comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">allocating_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">array_job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">array_task_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">array_max_tasks (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">array_task_string (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">association_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">batch_features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">batch_flag (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">batch_host (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">burst_buffer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">burst_buffer_state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">cluster_features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">command (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">container (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">container_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">contiguous (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">core_spec (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">thread_spec (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">cores_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_distribution_plane_size">v0_0_41_job_desc_msg_distribution_plane_size</a></span>  </div>
<div class="param">billable_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_billable_tres">v0_0_41_openapi_job_info_resp_jobs_inner_billable_tres</a></span>  </div>
<div class="param">cpus_per_task (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_distribution_plane_size">v0_0_41_job_desc_msg_distribution_plane_size</a></span>  </div>
<div class="param">cpu_frequency_minimum (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">cpu_frequency_maximum (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">cpu_frequency_governor (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">cpus_per_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">cron (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">deadline (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">delay_boot (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">dependency (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">derived_exit_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code">v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code</a></span>  </div>
<div class="param">eligible_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">end_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">excluded_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">exit_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code">v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code</a></span>  </div>
<div class="param">extra (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">failed_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">federation_origin (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">federation_siblings_active (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">federation_siblings_viable (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">gres_detail (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">group_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">group_name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">het_job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">het_job_id_set (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">het_job_offset (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">job_resources (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_job_resources">v0_0_41_openapi_job_info_resp_jobs_inner_job_resources</a></span>  </div>
<div class="param">job_size_str (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">job_state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">last_sched_evaluation (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">licenses (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">mail_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">mail_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">max_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">max_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">mcs_label (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">memory_per_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">network (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">nice (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">tasks_per_core (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_distribution_plane_size">v0_0_41_job_desc_msg_distribution_plane_size</a></span>  </div>
<div class="param">tasks_per_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_distribution_plane_size">v0_0_41_job_desc_msg_distribution_plane_size</a></span>  </div>
<div class="param">tasks_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_distribution_plane_size">v0_0_41_job_desc_msg_distribution_plane_size</a></span>  </div>
<div class="param">tasks_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_distribution_plane_size">v0_0_41_job_desc_msg_distribution_plane_size</a></span>  </div>
<div class="param">tasks_per_board (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_distribution_plane_size">v0_0_41_job_desc_msg_distribution_plane_size</a></span>  </div>
<div class="param">cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">node_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">tasks (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">prefer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">memory_per_cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">memory_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">minimum_cpus_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_distribution_plane_size">v0_0_41_job_desc_msg_distribution_plane_size</a></span>  </div>
<div class="param">minimum_tmp_disk_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">power (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_power">v0_0_41_openapi_job_info_resp_jobs_inner_power</a></span>  </div>
<div class="param">preempt_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">preemptable_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">pre_sus_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">hold (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Hold (true) or release (false) job </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_priority">v0_0_41_job_desc_msg_priority</a></span>  </div>
<div class="param">profile (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">reboot (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">required_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">minimum_switches (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">requeue (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">resize_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">restart_cnt (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">resv_name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">scheduled_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">selinux_context (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">shared (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">exclusive (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">oversubscribe (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">show_flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">sockets_per_board (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">sockets_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_distribution_plane_size">v0_0_41_job_desc_msg_distribution_plane_size</a></span>  </div>
<div class="param">start_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">state_description (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">state_reason (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">standard_error (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">standard_input (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">standard_output (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">submit_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">suspend_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">system_comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">time_limit (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">time_minimum (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">threads_per_core (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_distribution_plane_size">v0_0_41_job_desc_msg_distribution_plane_size</a></span>  </div>
<div class="param">tres_bind (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_freq (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_per_job (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_per_task (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_req_str (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_alloc_str (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">user_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">user_name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">maximum_switch_wait_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">wckey (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">current_working_directory (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_job_info_resp_jobs_inner_billable_tres"><code>v0_0_41_openapi_job_info_resp_jobs_inner_billable_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">64 bit floating point number with flags</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#double">Double</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: double</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code"><code>v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">return code returned by process</div>
    <div class="field-items">
      <div class="param">status (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Status given by return code </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">return_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code_return_code">v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code_return_code</a></span>  </div>
<div class="param">signal (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code_signal">v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code_signal</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code_return_code"><code>v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code_return_code</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">Process return code (numeric)</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code_signal"><code>v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code_signal</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code_signal_id">v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code_signal_id</a></span>  </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Signal sent to process </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code_signal_id"><code>v0_0_41_openapi_job_info_resp_jobs_inner_derived_exit_code_signal_id</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">Signal sent to process (numeric)</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_job_info_resp_jobs_inner_job_resources"><code>v0_0_41_openapi_job_info_resp_jobs_inner_job_resources</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">select_type </div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Scheduling consumption resource selection type </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes">v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes</a></span>  </div>
<div class="param">cpus </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of processors in the allocation format: int32</div>
<div class="param">threads_per_core </div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_threads_per_core">v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_threads_per_core</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes"><code>v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of nodes assigned to job format: int32</div>
<div class="param">select_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Node scheduling selection request </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">list (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> host list for job </div>
<div class="param">whole (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Job allocated full nodes </div>
<div class="param">allocation (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner">array[v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner]</a></span> resource allocations by node </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner"><code>v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">Job resources for a node</div>
    <div class="field-items">
      <div class="param">index </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Node index format: int32</div>
<div class="param">name </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Node name </div>
<div class="param">cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_cpus">v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_cpus</a></span>  </div>
<div class="param">memory (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_memory">v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_memory</a></span>  </div>
<div class="param">sockets </div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_sockets_inner">array[v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_sockets_inner]</a></span> Socket allocations in node </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_cpus"><code>v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_cpus</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total number of CPUs assigned to job format: int32</div>
<div class="param">used (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total number of CPUs used by job format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_memory"><code>v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_memory</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">used (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total memory (MiB) used by job format: int64</div>
<div class="param">allocated (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total memory (MiB) allocated to job format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_sockets_inner"><code>v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_sockets_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">index </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Core index format: int32</div>
<div class="param">cores </div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_sockets_inner_cores_inner">array[v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_sockets_inner_cores_inner]</a></span> Core in socket </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_sockets_inner_cores_inner"><code>v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes_allocation_inner_sockets_inner_cores_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">index </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Core index format: int32</div>
<div class="param">status </div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Core status </div>
        <div class="param-enum-header">Enum:</div>
        
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_threads_per_core"><code>v0_0_41_openapi_job_info_resp_jobs_inner_job_resources_threads_per_core</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">Number of processor threads per CPU core</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_job_info_resp_jobs_inner_power"><code>v0_0_41_openapi_job_info_resp_jobs_inner_power</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#AnyType">array[oas_any_type_not_mapped]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_job_info_resp_last_backfill"><code>v0_0_41_openapi_job_info_resp_last_backfill</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">time of last backfill scheduler run (UNIX timestamp)</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_job_info_resp_last_update"><code>v0_0_41_openapi_job_info_resp_last_update</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">time of last job change (UNIX timestamp)</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_job_post_response_results_inner"><code>v0_0_41_openapi_job_post_response_results_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> JobId for updated Job format: int32</div>
<div class="param">step_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> StepId for updated Job </div>
<div class="param">error (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Verbose update status or error </div>
<div class="param">error_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Verbose update status or error format: int32</div>
<div class="param">why (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Update response message </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_job_submit_response_result"><code>v0_0_41_openapi_job_submit_response_result</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">Job submission</div>
    <div class="field-items">
      <div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">step_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">error_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">error (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">job_submit_user_msg (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_kill_jobs_resp_status_inner"><code>v0_0_41_openapi_kill_jobs_resp_status_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">List of jobs signal responses</div>
    <div class="field-items">
      <div class="param">error (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_kill_jobs_resp_status_inner_error">v0_0_41_openapi_kill_jobs_resp_status_inner_error</a></span>  </div>
<div class="param">step_id </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job or Step ID that signaling failed </div>
<div class="param">job_id </div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_kill_jobs_resp_status_inner_job_id">v0_0_41_openapi_kill_jobs_resp_status_inner_job_id</a></span>  </div>
<div class="param">federation (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_kill_jobs_resp_status_inner_federation">v0_0_41_openapi_kill_jobs_resp_status_inner_federation</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_kill_jobs_resp_status_inner_error"><code>v0_0_41_openapi_kill_jobs_resp_status_inner_error</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">string (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> String error encountered signaling job </div>
<div class="param">code (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Numeric error encountered signaling job format: int32</div>
<div class="param">message (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Error message why signaling job failed </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_kill_jobs_resp_status_inner_federation"><code>v0_0_41_openapi_kill_jobs_resp_status_inner_federation</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">sibling (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Name of federation sibling (may be empty for non-federation) </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_kill_jobs_resp_status_inner_job_id"><code>v0_0_41_openapi_kill_jobs_resp_status_inner_job_id</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">Job ID that signaling failed</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_licenses_resp_last_update"><code>v0_0_41_openapi_licenses_resp_last_update</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">time of last licenses change (UNIX timestamp)</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_licenses_resp_licenses_inner"><code>v0_0_41_openapi_licenses_resp_licenses_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">LicenseName (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">Total (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">Used (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">Free (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">Remote (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">Reserved (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">LastConsumed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">LastDeficit (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">LastUpdate (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_nodes_resp_last_update"><code>v0_0_41_openapi_nodes_resp_last_update</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">time of last node change (UNIX timestamp)</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_nodes_resp_nodes_inner"><code>v0_0_41_openapi_nodes_resp_nodes_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">architecture (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">burstbuffer_network_address (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">boards (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">boot_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">cluster_name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">cores (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">specialized_cores (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">cpu_binding (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">cpu_load (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">free_mem (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">effective_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">specialized_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">energy (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_nodes_resp_nodes_inner_energy">v0_0_41_openapi_nodes_resp_nodes_inner_energy</a></span>  </div>
<div class="param">external_sensors (optional)</div><div class="param-desc"><span class="param-type"><a href="#">Object</a></span>  </div>
<div class="param">extra (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">power (optional)</div><div class="param-desc"><span class="param-type"><a href="#">Object</a></span>  </div>
<div class="param">features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">active_features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">gpu_spec (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">gres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">gres_drained (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">gres_used (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">instance_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">instance_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">last_busy (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">mcs_label (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">specialized_memory (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">next_state_after_reboot (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">address (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">hostname (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">operating_system (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">owner (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">partitions (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">port (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">real_memory (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">res_cores_per_gpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">reason (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">reason_changed_at (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">reason_set_by_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">resume_after (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">reservation (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">alloc_memory (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">alloc_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">alloc_idle_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">tres_used (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_weighted (optional)</div><div class="param-desc"><span class="param-type"><a href="#double">Double</a></span>  format: double</div>
<div class="param">slurmd_start_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">sockets (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">threads (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">temporary_disk (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">weight (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">version (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_nodes_resp_nodes_inner_energy"><code>v0_0_41_openapi_nodes_resp_nodes_inner_energy</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">average_watts (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">base_consumed_energy (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">consumed_energy (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">current_watts (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">previous_consumed_energy (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">last_collected (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_partition_resp_last_update"><code>v0_0_41_openapi_partition_resp_last_update</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">time of last partition change (UNIX timestamp)</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_partition_resp_partitions_inner"><code>v0_0_41_openapi_partition_resp_partitions_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_partition_resp_partitions_inner_nodes">v0_0_41_openapi_partition_resp_partitions_inner_nodes</a></span>  </div>
<div class="param">accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_partition_resp_partitions_inner_accounts">v0_0_41_openapi_partition_resp_partitions_inner_accounts</a></span>  </div>
<div class="param">groups (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_partition_resp_partitions_inner_groups">v0_0_41_openapi_partition_resp_partitions_inner_groups</a></span>  </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_partition_resp_partitions_inner_qos">v0_0_41_openapi_partition_resp_partitions_inner_qos</a></span>  </div>
<div class="param">alternate (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_partition_resp_partitions_inner_tres">v0_0_41_openapi_partition_resp_partitions_inner_tres</a></span>  </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">select_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Scheduler consumable resource selection types </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_partition_resp_partitions_inner_cpus">v0_0_41_openapi_partition_resp_partitions_inner_cpus</a></span>  </div>
<div class="param">defaults (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_partition_resp_partitions_inner_defaults">v0_0_41_openapi_partition_resp_partitions_inner_defaults</a></span>  </div>
<div class="param">grace_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">maximums (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_partition_resp_partitions_inner_maximums">v0_0_41_openapi_partition_resp_partitions_inner_maximums</a></span>  </div>
<div class="param">minimums (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_partition_resp_partitions_inner_minimums">v0_0_41_openapi_partition_resp_partitions_inner_minimums</a></span>  </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">node_sets (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_partition_resp_partitions_inner_priority">v0_0_41_openapi_partition_resp_partitions_inner_priority</a></span>  </div>
<div class="param">timeouts (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_partition_resp_partitions_inner_timeouts">v0_0_41_openapi_partition_resp_partitions_inner_timeouts</a></span>  </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_partition_resp_partitions_inner_partition">v0_0_41_openapi_partition_resp_partitions_inner_partition</a></span>  </div>
<div class="param">suspend_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_partition_resp_partitions_inner_accounts"><code>v0_0_41_openapi_partition_resp_partitions_inner_accounts</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">allowed (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">deny (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_partition_resp_partitions_inner_cpus"><code>v0_0_41_openapi_partition_resp_partitions_inner_cpus</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">task_binding (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_partition_resp_partitions_inner_defaults"><code>v0_0_41_openapi_partition_resp_partitions_inner_defaults</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">memory_per_cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">partition_memory_per_cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">partition_memory_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_partition_resp_partitions_inner_groups"><code>v0_0_41_openapi_partition_resp_partitions_inner_groups</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">allowed (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_partition_resp_partitions_inner_maximums"><code>v0_0_41_openapi_partition_resp_partitions_inner_maximums</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">cpus_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">cpus_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">memory_per_cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">partition_memory_per_cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">partition_memory_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">shares (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">oversubscribe (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_partition_resp_partitions_inner_maximums_oversubscribe">v0_0_41_openapi_partition_resp_partitions_inner_maximums_oversubscribe</a></span>  </div>
<div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
<div class="param">over_time_limit (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_distribution_plane_size">v0_0_41_job_desc_msg_distribution_plane_size</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_partition_resp_partitions_inner_maximums_oversubscribe"><code>v0_0_41_openapi_partition_resp_partitions_inner_maximums_oversubscribe</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_partition_resp_partitions_inner_minimums"><code>v0_0_41_openapi_partition_resp_partitions_inner_minimums</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_partition_resp_partitions_inner_nodes"><code>v0_0_41_openapi_partition_resp_partitions_inner_nodes</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">allowed_allocation (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">configured (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_partition_resp_partitions_inner_partition"><code>v0_0_41_openapi_partition_resp_partitions_inner_partition</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_partition_resp_partitions_inner_priority"><code>v0_0_41_openapi_partition_resp_partitions_inner_priority</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">job_factor (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">tier (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_partition_resp_partitions_inner_qos"><code>v0_0_41_openapi_partition_resp_partitions_inner_qos</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">allowed (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">deny (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">assigned (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_partition_resp_partitions_inner_timeouts"><code>v0_0_41_openapi_partition_resp_partitions_inner_timeouts</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">resume (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_distribution_plane_size">v0_0_41_job_desc_msg_distribution_plane_size</a></span>  </div>
<div class="param">suspend (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_distribution_plane_size">v0_0_41_job_desc_msg_distribution_plane_size</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_partition_resp_partitions_inner_tres"><code>v0_0_41_openapi_partition_resp_partitions_inner_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">billing_weights (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">configured (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_ping_array_resp_pings_inner"><code>v0_0_41_openapi_ping_array_resp_pings_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">hostname (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">pinged (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">latency (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">mode (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_reservation_resp_last_update"><code>v0_0_41_openapi_reservation_resp_last_update</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">time of last reservation change (UNIX timestamp)</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_reservation_resp_reservations_inner"><code>v0_0_41_openapi_reservation_resp_reservations_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">burst_buffer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">core_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">core_specializations (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_reservation_resp_reservations_inner_core_specializations_inner">array[v0_0_41_openapi_reservation_resp_reservations_inner_core_specializations_inner]</a></span>  </div>
<div class="param">end_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">groups (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">licenses (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">max_start_delay (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">node_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">node_list (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">purge_completed (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_reservation_resp_reservations_inner_purge_completed">v0_0_41_openapi_reservation_resp_reservations_inner_purge_completed</a></span>  </div>
<div class="param">start_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_diag_resp_statistics_req_time">v0_0_41_openapi_diag_resp_statistics_req_time</a></span>  </div>
<div class="param">watts (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_reservation_resp_reservations_inner_watts">v0_0_41_openapi_reservation_resp_reservations_inner_watts</a></span>  </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">users (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_reservation_resp_reservations_inner_core_specializations_inner"><code>v0_0_41_openapi_reservation_resp_reservations_inner_core_specializations_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">core (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_reservation_resp_reservations_inner_purge_completed"><code>v0_0_41_openapi_reservation_resp_reservations_inner_purge_completed</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_job_desc_msg_time_limit">v0_0_41_job_desc_msg_time_limit</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_reservation_resp_reservations_inner_watts"><code>v0_0_41_openapi_reservation_resp_reservations_inner_watts</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">32 bit integer number with flags</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_shares_resp_errors_inner"><code>v0_0_41_openapi_shares_resp_errors_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">description (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Long form error description </div>
<div class="param">error_number (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Slurm numeric error identifier format: int32</div>
<div class="param">error (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Short form error description </div>
<div class="param">source (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Source of error or where error was first detected </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_shares_resp_meta"><code>v0_0_41_openapi_shares_resp_meta</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">Slurm meta values</div>
    <div class="field-items">
      <div class="param">plugin (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_meta_plugin">v0_0_41_openapi_shares_resp_meta_plugin</a></span>  </div>
<div class="param">client (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_meta_client">v0_0_41_openapi_shares_resp_meta_client</a></span>  </div>
<div class="param">command (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> CLI command (if applicable) </div>
<div class="param">slurm (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_meta_slurm">v0_0_41_openapi_shares_resp_meta_slurm</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_shares_resp_meta_client"><code>v0_0_41_openapi_shares_resp_meta_client</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">source (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Client source description </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Client user (if known) </div>
<div class="param">group (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Client group (if known) </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_shares_resp_meta_plugin"><code>v0_0_41_openapi_shares_resp_meta_plugin</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Slurm plugin type (if applicable) </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Slurm plugin name (if applicable) </div>
<div class="param">data_parser (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Slurm data_parser plugin </div>
<div class="param">accounting_storage (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Slurm accounting plugin </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_shares_resp_meta_slurm"><code>v0_0_41_openapi_shares_resp_meta_slurm</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">version (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_meta_slurm_version">v0_0_41_openapi_shares_resp_meta_slurm_version</a></span>  </div>
<div class="param">release (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Slurm release string </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Slurm cluster name </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_shares_resp_meta_slurm_version"><code>v0_0_41_openapi_shares_resp_meta_slurm_version</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">major (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Slurm release major version </div>
<div class="param">micro (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Slurm release micro version </div>
<div class="param">minor (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Slurm release minor version </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_shares_resp_shares"><code>v0_0_41_openapi_shares_resp_shares</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">fairshare info</div>
    <div class="field-items">
      <div class="param">shares (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_shares_shares_inner">array[v0_0_41_openapi_shares_resp_shares_shares_inner]</a></span> Assocation shares </div>
<div class="param">total_shares (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total number of shares format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_shares_resp_shares_shares_inner"><code>v0_0_41_openapi_shares_resp_shares_shares_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> assocation id format: int32</div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> cluster name </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> share name </div>
<div class="param">parent (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> parent name </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> partition name </div>
<div class="param">shares_normalized (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_shares_shares_inner_shares_normalized">v0_0_41_openapi_shares_resp_shares_shares_inner_shares_normalized</a></span>  </div>
<div class="param">shares (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_shares_shares_inner_shares">v0_0_41_openapi_shares_resp_shares_shares_inner_shares</a></span>  </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_shares_shares_inner_tres">v0_0_41_openapi_shares_resp_shares_shares_inner_tres</a></span>  </div>
<div class="param">effective_usage (optional)</div><div class="param-desc"><span class="param-type"><a href="#double">Double</a></span> effective, normalized usage format: double</div>
<div class="param">usage_normalized (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_shares_shares_inner_usage_normalized">v0_0_41_openapi_shares_resp_shares_shares_inner_usage_normalized</a></span>  </div>
<div class="param">usage (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> measure of tresbillableunits usage format: int64</div>
<div class="param">fairshare (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_shares_shares_inner_fairshare">v0_0_41_openapi_shares_resp_shares_shares_inner_fairshare</a></span>  </div>
<div class="param">type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> user or account association </div>
        <div class="param-enum-header">Enum:</div>
        
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_shares_resp_shares_shares_inner_fairshare"><code>v0_0_41_openapi_shares_resp_shares_shares_inner_fairshare</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">factor (optional)</div><div class="param-desc"><span class="param-type"><a href="#double">Double</a></span> fairshare factor format: double</div>
<div class="param">level (optional)</div><div class="param-desc"><span class="param-type"><a href="#double">Double</a></span> fairshare factor at this level. stored on an assoc as a long double, but that is not needed for display in sshare format: double</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_shares_resp_shares_shares_inner_shares"><code>v0_0_41_openapi_shares_resp_shares_shares_inner_shares</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">number of shares allocated</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_shares_resp_shares_shares_inner_shares_normalized"><code>v0_0_41_openapi_shares_resp_shares_shares_inner_shares_normalized</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">normalized shares</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#double">Double</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: double</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_shares_resp_shares_shares_inner_tres"><code>v0_0_41_openapi_shares_resp_shares_shares_inner_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">run_seconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_shares_shares_inner_tres_run_seconds_inner">array[v0_0_41_openapi_shares_resp_shares_shares_inner_tres_run_seconds_inner]</a></span> currently running tres-secs = grp_used_tres_run_secs </div>
<div class="param">group_minutes (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_shares_shares_inner_tres_run_seconds_inner">array[v0_0_41_openapi_shares_resp_shares_shares_inner_tres_run_seconds_inner]</a></span> tres-minute limit </div>
<div class="param">usage (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_shares_shares_inner_tres_usage_inner">array[v0_0_41_openapi_shares_resp_shares_shares_inner_tres_usage_inner]</a></span> measure of each tres usage </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_shares_resp_shares_shares_inner_tres_run_seconds_inner"><code>v0_0_41_openapi_shares_resp_shares_shares_inner_tres_run_seconds_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> TRES name </div>
<div class="param">value (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_41_openapi_shares_resp_shares_shares_inner_tres_run_seconds_inner_value">v0_0_41_openapi_shares_resp_shares_shares_inner_tres_run_seconds_inner_value</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_shares_resp_shares_shares_inner_tres_run_seconds_inner_value"><code>v0_0_41_openapi_shares_resp_shares_shares_inner_tres_run_seconds_inner_value</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">TRES value</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_shares_resp_shares_shares_inner_tres_usage_inner"><code>v0_0_41_openapi_shares_resp_shares_shares_inner_tres_usage_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> TRES name </div>
<div class="param">value (optional)</div><div class="param-desc"><span class="param-type"><a href="#number">BigDecimal</a></span> TRES value </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_shares_resp_shares_shares_inner_usage_normalized"><code>v0_0_41_openapi_shares_resp_shares_shares_inner_usage_normalized</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">normalized usage</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#double">Double</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: double</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_openapi_shares_resp_warnings_inner"><code>v0_0_41_openapi_shares_resp_warnings_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">description (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Long form warning description </div>
<div class="param">source (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Source of warning or where warning was first detected </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_update_node_msg_resume_after"><code>v0_0_41_update_node_msg_resume_after</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">automatically resume DOWN or DRAINED node after this amount of seconds</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_41_update_node_msg_weight"><code>v0_0_41_update_node_msg_weight</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description">new weight for node</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. "set" and "number" will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int32</div>
    </div>  <!-- field-items -->
  </div>
  

</body> <!--#include virtual="footer.txt"-->
